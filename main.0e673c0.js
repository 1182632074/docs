!function(s){function n(a){if(t[a])return t[a].exports;var l=t[a]={exports:{},id:a,loaded:!1};return s[a].call(l.exports,l,l.exports,n),l.loaded=!0,l.exports}var t={};return n.m=s,n.c=t,n.p="/docs/",n(0)}([function(s,n,t){"use strict";function a(s){return s&&s.__esModule?s:{"default":s}}var l=t(155),p=a(l),e=t(14),c=a(e),r=t(171),d=a(r),o=t(170),h=a(o);t(166),t(165),t(167);var i=new d["default"];h["default"].use(d["default"]),i.map(c["default"]),i.start(p["default"],"app"),i.beforeEach(function(s){document.title=s.to.title||document.title,s.next()})},function(s,n,t){s.exports=!t(2)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(s,n){s.exports=function(s){try{return!!s()}catch(n){return!0}}},function(s,n){var t=s.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},function(s,n){s.exports=function(s){return"object"==typeof s?null!==s:"function"==typeof s}},function(s,n,t){s.exports=t(100),'<h1>Choose a language</h1>\n\n<p><a class="button-language" v-link="{path: \'/\' + item.value}" v-for="item in $route.langs" v-text="item.text + ($route.default_lang.text === item.text ? \' (default)\' : \'\')"></a></p>\n'!==s.exports.template&&(s.exports.template='<h1>Choose a language</h1>\n\n<p><a class="button-language" v-link="{path: \'/\' + item.value}" v-for="item in $route.langs" v-text="item.text + ($route.default_lang.text === item.text ? \' (default)\' : \'\')"></a></p>\n')},function(s,n,t){s.exports=t(101),'<h1>mint-ui Docs</h1>\n<hr>\n<h1>Installation</h1>\n<pre><code class="language-shell">npm install mint-ui --save\n</code></pre>\n<h1>Usage</h1>\n<p>Import all components.</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>;\n<span class="hljs-keyword">import</span> MintUI <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui\'</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mint-ui/lib/style.css\'</span>;\n\nVue.use(MintUI);\n</code></pre>\n<p>Or import specified component.</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> Cell <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui/lib/cell\'</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mint-ui/lib/cell/style.css\'</span>;\n\n<span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui/lib/button\'</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mint-ui/lib/button/style.css\'</span>;\n\nVue.component(Cell.name, Cell);\nVue.component(Button.name, Button);\n</code></pre>\n<h3>Use <a href="https://github.com/QingWei-Li/babel-plugin-component">babel-plugin-component</a></h3>\n'!==s.exports.template&&(s.exports.template='<h1>mint-ui Docs</h1>\n<hr>\n<h1>Installation</h1>\n<pre><code class="language-shell">npm install mint-ui --save\n</code></pre>\n<h1>Usage</h1>\n<p>Import all components.</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>;\n<span class="hljs-keyword">import</span> MintUI <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui\'</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mint-ui/lib/style.css\'</span>;\n\nVue.use(MintUI);\n</code></pre>\n<p>Or import specified component.</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> Cell <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui/lib/cell\'</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mint-ui/lib/cell/style.css\'</span>;\n\n<span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui/lib/button\'</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mint-ui/lib/button/style.css\'</span>;\n\nVue.component(Cell.name, Cell);\nVue.component(Button.name, Button);\n</code></pre>\n<h3>Use <a href="https://github.com/QingWei-Li/babel-plugin-component">babel-plugin-component</a></h3>\n')},function(s,n,t){s.exports=t(128),'<h1>mint-ui 使用文档</h1>\n<hr>\n<h2>安装</h2>\n<pre><code class="language-shell">npm install mint-ui -save\n</code></pre>\n<h2>快速开始</h2>\n<p>引入全部组件</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>;\n<span class="hljs-keyword">import</span> MintUI <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui\'</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mint-ui/lib/style.css\'</span>;\n\nVue.use(MintUI);\n</code></pre>\n<p>只引入需要的组件</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> Cell <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui/lib/cell\'</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mint-ui/lib/cell/style.css\'</span>;\n\n<span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui/lib/button\'</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mint-ui/lib/button/style.css\'</span>;\n\nVue.component(Cell.name, Cell);\nVue.component(Button.name, Button);\n</code></pre>\n<h3>使用 <a href="https://github.com/QingWei-Li/babel-plugin-component">babel-plugin-component</a> 可以自动导入样式文件及按需加载</h3>\n<p>自动引入样式</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>;\n<span class="hljs-keyword">import</span> MintUI <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui\'</span>;\n\nVue.use(MintUI);\n</code></pre>\n<p>按需加载</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>;\n<span class="hljs-keyword">import</span> { Cell, Button } <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui\'</span>;\n\nVue.component(Cell.name, Cell);\nVue.component(Button.name, Button);\n</code></pre>\n<p>将会被翻译成</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> Vue = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'vue\'</span>);\n<span class="hljs-keyword">var</span> Cell = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'mint-ui/lib/cell\'</span>);\n<span class="hljs-built_in">require</span>(<span class="hljs-string">\'mint-ui/lib/cell/style.css\'</span>);\n\n<span class="hljs-keyword">var</span> Button = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'mint-ui/lib/button\'</span>);\n<span class="hljs-built_in">require</span>(<span class="hljs-string">\'mint-ui/lib/button/style.css\'</span>);\n\nVue.component(Cell.name, Cell);\nVue.component(Button.name, Button);\n</code></pre>\n<h3>babel-plugin-component 配置</h3>\n<p>.babelrc</p>\n<pre><code class="language-json">{\n  <span class="hljs-attr">"plugins"</span>: [<span class="hljs-string">"other-plugin"</span>, [<span class="hljs-string">"component"</span>, [\n    { <span class="hljs-attr">"libraryName"</span>: <span class="hljs-string">"mint-ui"</span>, <span class="hljs-attr">"style"</span>: <span class="hljs-literal">true</span> }\n  ]]]\n}\n</code></pre>\n'!==s.exports.template&&(s.exports.template='<h1>mint-ui 使用文档</h1>\n<hr>\n<h2>安装</h2>\n<pre><code class="language-shell">npm install mint-ui -save\n</code></pre>\n<h2>快速开始</h2>\n<p>引入全部组件</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>;\n<span class="hljs-keyword">import</span> MintUI <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui\'</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mint-ui/lib/style.css\'</span>;\n\nVue.use(MintUI);\n</code></pre>\n<p>只引入需要的组件</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> Cell <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui/lib/cell\'</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mint-ui/lib/cell/style.css\'</span>;\n\n<span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui/lib/button\'</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mint-ui/lib/button/style.css\'</span>;\n\nVue.component(Cell.name, Cell);\nVue.component(Button.name, Button);\n</code></pre>\n<h3>使用 <a href="https://github.com/QingWei-Li/babel-plugin-component">babel-plugin-component</a> 可以自动导入样式文件及按需加载</h3>\n<p>自动引入样式</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>;\n<span class="hljs-keyword">import</span> MintUI <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui\'</span>;\n\nVue.use(MintUI);\n</code></pre>\n<p>按需加载</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>;\n<span class="hljs-keyword">import</span> { Cell, Button } <span class="hljs-keyword">from</span> <span class="hljs-string">\'mint-ui\'</span>;\n\nVue.component(Cell.name, Cell);\nVue.component(Button.name, Button);\n</code></pre>\n<p>将会被翻译成</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> Vue = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'vue\'</span>);\n<span class="hljs-keyword">var</span> Cell = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'mint-ui/lib/cell\'</span>);\n<span class="hljs-built_in">require</span>(<span class="hljs-string">\'mint-ui/lib/cell/style.css\'</span>);\n\n<span class="hljs-keyword">var</span> Button = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'mint-ui/lib/button\'</span>);\n<span class="hljs-built_in">require</span>(<span class="hljs-string">\'mint-ui/lib/button/style.css\'</span>);\n\nVue.component(Cell.name, Cell);\nVue.component(Button.name, Button);\n</code></pre>\n<h3>babel-plugin-component 配置</h3>\n<p>.babelrc</p>\n<pre><code class="language-json">{\n  <span class="hljs-attr">"plugins"</span>: [<span class="hljs-string">"other-plugin"</span>, [<span class="hljs-string">"component"</span>, [\n    { <span class="hljs-attr">"libraryName"</span>: <span class="hljs-string">"mint-ui"</span>, <span class="hljs-attr">"style"</span>: <span class="hljs-literal">true</span> }\n  ]]]\n}\n</code></pre>\n')},function(s,n,t){s.exports=t(147),'<h1>子项目</h1>\n<blockquote>\n<p>所有 JS 组件均有单独的仓库</p>\n</blockquote>\n<hr>\n<h2><a href="https://github.com/ElemeFE/vue-toast-mobile">Toast</a></h2>\n<h2><a href="https://github.com/mint-ui/mint-indicator">Indicator</a></h2>\n<h2><a href="https://github.com/mint-ui/mint-loadmore">Loadmore</a></h2>\n<h2><a href="https://github.com/ElemeFE/vue-infinite-scroll">Infinite scroll</a></h2>\n<h2><a href="https://github.com/ElemeFE/vue-msgbox">Message box</a></h2>\n<h2><a href="https://github.com/mint-ui/mint-actionsheet">Action sheet</a></h2>\n<h2><a href="https://github.com/mint-ui/mint-popup">Popup</a></h2>\n<h2><a href="https://github.com/ElemeFE/vue-swipe">Swipe</a></h2>\n<h2><a href="https://github.com/hilongjw/vue-lazyload">Lazy load</a>（作者：<a href="https://github.com/hilongjw">@hilongjw</a>）</h2>\n<h2><a href="https://github.com/mint-ui/mint-range">Range</a></h2>\n<h2><a href="https://github.com/mint-ui/mint-progress">Progress</a></h2>\n<h2><a href="https://github.com/mint-ui/mint-picker">Picker</a></h2>\n'!==s.exports.template&&(s.exports.template='<h1>子项目</h1>\n<blockquote>\n<p>所有 JS 组件均有单独的仓库</p>\n</blockquote>\n<hr>\n<h2><a href="https://github.com/ElemeFE/vue-toast-mobile">Toast</a></h2>\n<h2><a href="https://github.com/mint-ui/mint-indicator">Indicator</a></h2>\n<h2><a href="https://github.com/mint-ui/mint-loadmore">Loadmore</a></h2>\n<h2><a href="https://github.com/ElemeFE/vue-infinite-scroll">Infinite scroll</a></h2>\n<h2><a href="https://github.com/ElemeFE/vue-msgbox">Message box</a></h2>\n<h2><a href="https://github.com/mint-ui/mint-actionsheet">Action sheet</a></h2>\n<h2><a href="https://github.com/mint-ui/mint-popup">Popup</a></h2>\n<h2><a href="https://github.com/ElemeFE/vue-swipe">Swipe</a></h2>\n<h2><a href="https://github.com/hilongjw/vue-lazyload">Lazy load</a>（作者：<a href="https://github.com/hilongjw">@hilongjw</a>）</h2>\n<h2><a href="https://github.com/mint-ui/mint-range">Range</a></h2>\n<h2><a href="https://github.com/mint-ui/mint-progress">Progress</a></h2>\n<h2><a href="https://github.com/mint-ui/mint-picker">Picker</a></h2>\n')},function(s,n){var t=s.exports={version:"2.4.0"};"number"==typeof __e&&(__e=t)},function(s,n){s.exports=function(s){if(void 0==s)throw TypeError("Can't call method on  "+s);return s}},function(s,n,t){var a=t(74);s.exports=Object("z").propertyIsEnumerable(0)?Object:function(s){return"String"==a(s)?s.split(""):Object(s)}},function(s,n){var t=Math.ceil,a=Math.floor;s.exports=function(s){return isNaN(s=+s)?0:(s>0?a:t)(s)}},function(s,n,t){var a=t(11),l=t(10);s.exports=function(s){return a(l(s))}},function(s,n,t){"use strict";function a(s){return s&&s.__esModule?s:{"default":s}}Object.defineProperty(n,"__esModule",{value:!0}),n.navs=void 0;var l=t(69),p=a(l),e=t(169),c=a(e),r=t(168),d=a(r),o=function(s,n){var a={};return s.map(function(s){return s.list.map(function(s){try{a["/"+n+s.path]={title:s.title||s.name,language:n,component:t(66)("./"+n+s.path+".md")}}catch(l){console.error(l)}})}),a},h={};d["default"].langs.forEach(function(s){h["/"+s.value]={title:"概述",language:s.value,component:t(67)("./"+s.value+"/README.md")},h["/"+s.value+"/repositories"]={title:"子项目",language:s.value,component:t(68)("./"+s.value+"/repositories.md")},(0,p["default"])(h,o(c["default"],s.value))});var i={};d["default"].langs.forEach(function(s){s.value===d["default"]["default"]&&(i=s)});n.navs=c["default"];n["default"]=(0,p["default"])({"/":{component:t(5),default_lang:i,langs:d["default"].langs,title:"选择语言"}},h)},function(s,n,t){s.exports=t(102),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(103),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(104),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(105),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(106),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(107),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(108),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(109),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(110),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(111),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(112),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(113),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(114),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(115),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(116),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(117),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(118),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(119),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(120),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(121),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(122),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(123),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(124),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(125),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(126),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(127),""!==s.exports.template&&(s.exports.template="")},function(s,n,t){s.exports=t(129),'<h1>Action sheet</h1>\n<blockquote>\n<p>操作表，从屏幕下方移入。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p><code>actions</code> 属性绑定一个由对象组成的数组，每个对象有 <code>name</code> 和 <code>method</code> 两个键，<code>name</code> 为菜单项的文本，<code>method</code> 为点击该菜单项的回调函数。</p>\n<p>将 <code>visible</code> 属性与一个本地变量同步，通过操作这个变量即可控制 <code>actionsheet</code> 的显示与隐藏。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-actionsheet</span>\n  <span class="hljs-attr">:actions</span>=<span class="hljs-string">"actions"</span>\n  <span class="hljs-attr">:visible.sync</span>=<span class="hljs-string">"sheetVisible"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-actionsheet</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>actions</td>\n<td>菜单项数组</td>\n<td>Array</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>visible</td>\n<td>是否显示 <code>actionsheet</code></td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>cancelText</td>\n<td>取消按钮的文本。若设为空字符串，则不显示取消按钮</td>\n<td>String</td>\n<td></td>\n<td>\'取消\'</td>\n</tr>\n<tr>\n<td>closeOnClickModal</td>\n<td>是否可以通过点击 modal 层来关闭 <code>actionsheet</code></td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Action sheet</h1>\n<blockquote>\n<p>操作表，从屏幕下方移入。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p><code>actions</code> 属性绑定一个由对象组成的数组，每个对象有 <code>name</code> 和 <code>method</code> 两个键，<code>name</code> 为菜单项的文本，<code>method</code> 为点击该菜单项的回调函数。</p>\n<p>将 <code>visible</code> 属性与一个本地变量同步，通过操作这个变量即可控制 <code>actionsheet</code> 的显示与隐藏。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-actionsheet</span>\n  <span class="hljs-attr">:actions</span>=<span class="hljs-string">"actions"</span>\n  <span class="hljs-attr">:visible.sync</span>=<span class="hljs-string">"sheetVisible"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-actionsheet</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>actions</td>\n<td>菜单项数组</td>\n<td>Array</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>visible</td>\n<td>是否显示 <code>actionsheet</code></td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>cancelText</td>\n<td>取消按钮的文本。若设为空字符串，则不显示取消按钮</td>\n<td>String</td>\n<td></td>\n<td>\'取消\'</td>\n</tr>\n<tr>\n<td>closeOnClickModal</td>\n<td>是否可以通过点击 modal 层来关闭 <code>actionsheet</code></td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(130),'<h1>Badge</h1>\n<blockquote>\n<p>徽章，可指定颜色和尺寸。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>指定尺寸</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"small"</span>&gt;</span>30<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"normal"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"large"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n</code></pre>\n<p>指定类型</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>30<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"error"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"success"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"warning"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n</code></pre>\n<p>指定颜色</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"small"</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"#888"</span>&gt;</span>自定义颜色<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>显示类型</td>\n<td>String</td>\n<td>primary, error, success, warning</td>\n<td>primary</td>\n</tr>\n<tr>\n<td>color</td>\n<td>自定义颜色值</td>\n<td>String</td>\n<td></td>\n<td>type 的颜色</td>\n</tr>\n<tr>\n<td>size</td>\n<td>尺寸</td>\n<td>String</td>\n<td>normal, large, small</td>\n<td>normal</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>显示内容</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Badge</h1>\n<blockquote>\n<p>徽章，可指定颜色和尺寸。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>指定尺寸</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"small"</span>&gt;</span>30<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"normal"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"large"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n</code></pre>\n<p>指定类型</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>30<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"error"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"success"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"warning"</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n</code></pre>\n<p>指定颜色</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-badge</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"small"</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"#888"</span>&gt;</span>自定义颜色<span class="hljs-tag">&lt;/<span class="hljs-name">mt-badge</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>显示类型</td>\n<td>String</td>\n<td>primary, error, success, warning</td>\n<td>primary</td>\n</tr>\n<tr>\n<td>color</td>\n<td>自定义颜色值</td>\n<td>String</td>\n<td></td>\n<td>type 的颜色</td>\n</tr>\n<tr>\n<td>size</td>\n<td>尺寸</td>\n<td>String</td>\n<td>normal, large, small</td>\n<td>normal</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>显示内容</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(131),'<h1>Button</h1>\n<blockquote>\n<p>按钮，提供几种基础样式和尺寸，可自定义图标。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>改变颜色</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"default"</span>&gt;</span>default<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>primary<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"danger"</span>&gt;</span>danger<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n</code></pre>\n<p>改变大小</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"small"</span>&gt;</span>small<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"large"</span>&gt;</span>large<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"normal"</span>&gt;</span>normal<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n</code></pre>\n<p>禁用按钮</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">disabled</span>&gt;</span>disabled<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n</code></pre>\n<p>幽灵按钮</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">plain</span>&gt;</span>plain<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n</code></pre>\n<p>带图标</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"back"</span>&gt;</span>back<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"more"</span>&gt;</span>更多<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n</code></pre>\n<p>自定义图标</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../assets/100x100.png"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"20"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"20"</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"icon"</span>&gt;</span>\n  带自定义图标\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>plain</td>\n<td>幽灵按钮</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>禁用状态</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>type</td>\n<td>按钮显示样式</td>\n<td>String</td>\n<td>default, primary, danger</td>\n<td>default</td>\n</tr>\n<tr>\n<td>size</td>\n<td>尺寸</td>\n<td>String</td>\n<td>small, normal, large</td>\n<td>normal</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>图标</td>\n<td>String</td>\n<td>more, back</td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>显示的文本内容</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>自定义显示的图标</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Button</h1>\n<blockquote>\n<p>按钮，提供几种基础样式和尺寸，可自定义图标。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>改变颜色</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"default"</span>&gt;</span>default<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>primary<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"danger"</span>&gt;</span>danger<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n</code></pre>\n<p>改变大小</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"small"</span>&gt;</span>small<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"large"</span>&gt;</span>large<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"normal"</span>&gt;</span>normal<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n</code></pre>\n<p>禁用按钮</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">disabled</span>&gt;</span>disabled<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n</code></pre>\n<p>幽灵按钮</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">plain</span>&gt;</span>plain<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n</code></pre>\n<p>带图标</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"back"</span>&gt;</span>back<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"more"</span>&gt;</span>更多<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n</code></pre>\n<p>自定义图标</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../assets/100x100.png"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"20"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"20"</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"icon"</span>&gt;</span>\n  带自定义图标\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>plain</td>\n<td>幽灵按钮</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>禁用状态</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>type</td>\n<td>按钮显示样式</td>\n<td>String</td>\n<td>default, primary, danger</td>\n<td>default</td>\n</tr>\n<tr>\n<td>size</td>\n<td>尺寸</td>\n<td>String</td>\n<td>small, normal, large</td>\n<td>normal</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>图标</td>\n<td>String</td>\n<td>more, back</td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>显示的文本内容</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>自定义显示的图标</td>\n</tr>\n</tbody>\n</table></div>');
},function(s,n,t){s.exports=t(132),'<h1>Cell</h1>\n<blockquote>\n<p>单元格，可用作展示列表信息、链接或者表单等。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>基础用法</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题文字"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题文字"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"说明文字"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n</code></pre>\n<p>可点击的链接</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"标题文字"</span>\n  <span class="hljs-attr">href</span>=<span class="hljs-string">"//github.com"</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">value</span>=<span class="hljs-string">"带链接"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n</code></pre>\n<p>带图标</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题文字"</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"more"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"带 icon"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n</code></pre>\n<p>带自定义图标</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题文字"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>icon 是图片<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../assets/100x100.png"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"24"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"24"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n</code></pre>\n<p>自定义内容</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题文字"</span> <span class="hljs-attr">is-link</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"color: green"</span>&gt;</span>这里是元素<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n</code></pre>\n<p>带备注信息</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题"</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"描述信息"</span> <span class="hljs-attr">is-link</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>icon</td>\n<td>图标</td>\n<td>String</td>\n<td>back, more</td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>内容</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>label</td>\n<td>备注信息，显示在标题下方</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>is-link</td>\n<td>链接，会显示箭头图标。搭配 href 属性使用</td>\n<td>Boolean</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>自定义显示内容</td>\n</tr>\n<tr>\n<td>title</td>\n<td>自定义标题</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>自定义图标</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Cell</h1>\n<blockquote>\n<p>单元格，可用作展示列表信息、链接或者表单等。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>基础用法</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题文字"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题文字"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"说明文字"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n</code></pre>\n<p>可点击的链接</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"标题文字"</span>\n  <span class="hljs-attr">href</span>=<span class="hljs-string">"//github.com"</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">value</span>=<span class="hljs-string">"带链接"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n</code></pre>\n<p>带图标</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题文字"</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"more"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"带 icon"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n</code></pre>\n<p>带自定义图标</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题文字"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>icon 是图片<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../assets/100x100.png"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"24"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"24"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n</code></pre>\n<p>自定义内容</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题文字"</span> <span class="hljs-attr">is-link</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"color: green"</span>&gt;</span>这里是元素<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n</code></pre>\n<p>带备注信息</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题"</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"描述信息"</span> <span class="hljs-attr">is-link</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>icon</td>\n<td>图标</td>\n<td>String</td>\n<td>back, more</td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>内容</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>label</td>\n<td>备注信息，显示在标题下方</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>is-link</td>\n<td>链接，会显示箭头图标。搭配 href 属性使用</td>\n<td>Boolean</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>自定义显示内容</td>\n</tr>\n<tr>\n<td>title</td>\n<td>自定义标题</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>自定义图标</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(133),'<h1>Checklist</h1>\n<blockquote>\n<p>复选框列表，依赖 <a v-link="{path:\'/cell\'}">cell</a> 组件。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>基本用法</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-checklist</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"复选框列表"</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"[\'选项A\', \'选项B\', \'选项C\']"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-checklist</span>&gt;</span>\n</code></pre>\n<p>设置禁用选项</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">this</span>.options = [\n  {\n    label: <span class="hljs-string">\'被禁用\'</span>,\n    value: <span class="hljs-string">\'值F\'</span>,\n    disabled: <span class="hljs-literal">true</span>\n  },\n  {\n    label: <span class="hljs-string">\'选中禁用\'</span>,\n    value: <span class="hljs-string">\'选中禁用的值\'</span>,\n    disabled: <span class="hljs-literal">true</span>\n  },\n  {\n    label: <span class="hljs-string">\'选项A\'</span>,\n    value: <span class="hljs-string">\'值A\'</span>\n  },\n  {\n    label: <span class="hljs-string">\'选项B\'</span>,\n    value: <span class="hljs-string">\'值B\'</span>\n  }\n];\n</code></pre>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-checklist</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"options"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-checklist</span>&gt;</span>\n</code></pre>\n<p>设置最大可选数</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-checklist</span>\n  <span class="hljs-attr">:max</span>=<span class="hljs-string">"2"</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"options"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-checklist</span>&gt;</span>\n</code></pre>\n<p>选择框右对齐</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-checklist</span>\n  <span class="hljs-attr">align</span>=<span class="hljs-string">"right"</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"右对齐"</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"options"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-checklist</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>options</td>\n<td>选择项</td>\n<td>Array</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>绑定值</td>\n<td>Array</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题，显示在列表上方</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>max</td>\n<td>最多可选个数，超过后其他未选择的选项变成禁用状态</td>\n<td>Number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>align</td>\n<td>复选框对其位置</td>\n<td>String</td>\n<td>left, right</td>\n<td>left</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Checklist</h1>\n<blockquote>\n<p>复选框列表，依赖 <a v-link="{path:\'/cell\'}">cell</a> 组件。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>基本用法</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-checklist</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"复选框列表"</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"[\'选项A\', \'选项B\', \'选项C\']"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-checklist</span>&gt;</span>\n</code></pre>\n<p>设置禁用选项</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">this</span>.options = [\n  {\n    label: <span class="hljs-string">\'被禁用\'</span>,\n    value: <span class="hljs-string">\'值F\'</span>,\n    disabled: <span class="hljs-literal">true</span>\n  },\n  {\n    label: <span class="hljs-string">\'选中禁用\'</span>,\n    value: <span class="hljs-string">\'选中禁用的值\'</span>,\n    disabled: <span class="hljs-literal">true</span>\n  },\n  {\n    label: <span class="hljs-string">\'选项A\'</span>,\n    value: <span class="hljs-string">\'值A\'</span>\n  },\n  {\n    label: <span class="hljs-string">\'选项B\'</span>,\n    value: <span class="hljs-string">\'值B\'</span>\n  }\n];\n</code></pre>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-checklist</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"options"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-checklist</span>&gt;</span>\n</code></pre>\n<p>设置最大可选数</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-checklist</span>\n  <span class="hljs-attr">:max</span>=<span class="hljs-string">"2"</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"options"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-checklist</span>&gt;</span>\n</code></pre>\n<p>选择框右对齐</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-checklist</span>\n  <span class="hljs-attr">align</span>=<span class="hljs-string">"right"</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"右对齐"</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"options"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-checklist</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>options</td>\n<td>选择项</td>\n<td>Array</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>绑定值</td>\n<td>Array</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题，显示在列表上方</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>max</td>\n<td>最多可选个数，超过后其他未选择的选项变成禁用状态</td>\n<td>Number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>align</td>\n<td>复选框对其位置</td>\n<td>String</td>\n<td>left, right</td>\n<td>left</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(134),'<h1>Field</h1>\n<blockquote>\n<p>表单编辑器。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>基础用法</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"用户名"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入用户名"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"邮箱"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入邮箱"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"email"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"密码"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入密码"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"password"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"手机号"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入手机号"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"tel"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"网站"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入网址"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"url"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"数字"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入数字"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"number"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"生日"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入生日"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"date"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"自我介绍"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"自我介绍"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"textarea"</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">"4"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n</code></pre>\n<p>设置校验状态</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"邮箱"</span> <span class="hljs-attr">state</span>=<span class="hljs-string">"success"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"邮箱"</span> <span class="hljs-attr">state</span>=<span class="hljs-string">"error"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"邮箱"</span> <span class="hljs-attr">state</span>=<span class="hljs-string">"warning"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>输入框类型</td>\n<td>String</td>\n<td>text, number, email, url, tel, date, datetime, password, textarea</td>\n<td>text</td>\n</tr>\n<tr>\n<td>label</td>\n<td>标签</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>rows</td>\n<td>类型为 textarea 时可指定高度（显示行数）</td>\n<td>Number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>占位内容</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>校验状态</td>\n<td>String</td>\n<td>error, success, warning</td>\n<td></td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Field</h1>\n<blockquote>\n<p>表单编辑器。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>基础用法</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"用户名"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入用户名"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"邮箱"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入邮箱"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"email"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"密码"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入密码"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"password"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"手机号"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入手机号"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"tel"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"网站"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入网址"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"url"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"数字"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入数字"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"number"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"生日"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入生日"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"date"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"自我介绍"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"自我介绍"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"textarea"</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">"4"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n</code></pre>\n<p>设置校验状态</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"邮箱"</span> <span class="hljs-attr">state</span>=<span class="hljs-string">"success"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"邮箱"</span> <span class="hljs-attr">state</span>=<span class="hljs-string">"error"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"邮箱"</span> <span class="hljs-attr">state</span>=<span class="hljs-string">"warning"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>输入框类型</td>\n<td>String</td>\n<td>text, number, email, url, tel, date, datetime, password, textarea</td>\n<td>text</td>\n</tr>\n<tr>\n<td>label</td>\n<td>标签</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>rows</td>\n<td>类型为 textarea 时可指定高度（显示行数）</td>\n<td>Number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>占位内容</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>state</td>\n<td>校验状态</td>\n<td>String</td>\n<td>error, success, warning</td>\n<td></td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(135),'<h1>Header</h1>\n<blockquote>\n<p>顶部导航栏，支持显示按钮、自定义文字和固定在顶部。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>固定在页面顶部</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-header</span> <span class="hljs-attr">fixed</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"固定在顶部"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-header</span>&gt;</span>\n</code></pre>\n<p>设置 <code>left</code> 或 <code>right</code> slot</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-header</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题过长会隐藏后面的内容啊哈哈哈哈"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">v-link</span>=<span class="hljs-string">"\'/\'"</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"back"</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"left"</span>&gt;</span>返回<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"more"</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"right"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-header</span>&gt;</span>\n</code></pre>\n<p>设置多个按钮</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-header</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"多个按钮"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"left"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">v-link</span>=<span class="hljs-string">"\'/\'"</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"back"</span>&gt;</span>返回<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"handleClose"</span>&gt;</span>关闭<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"more"</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"right"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-header</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fixed</td>\n<td>固定在页面顶部</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>left</td>\n<td>左边显示元素</td>\n</tr>\n<tr>\n<td>right</td>\n<td>右边显示元素</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Header</h1>\n<blockquote>\n<p>顶部导航栏，支持显示按钮、自定义文字和固定在顶部。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>固定在页面顶部</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-header</span> <span class="hljs-attr">fixed</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"固定在顶部"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-header</span>&gt;</span>\n</code></pre>\n<p>设置 <code>left</code> 或 <code>right</code> slot</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-header</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题过长会隐藏后面的内容啊哈哈哈哈"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">v-link</span>=<span class="hljs-string">"\'/\'"</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"back"</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"left"</span>&gt;</span>返回<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"more"</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"right"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-header</span>&gt;</span>\n</code></pre>\n<p>设置多个按钮</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-header</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"多个按钮"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"left"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">v-link</span>=<span class="hljs-string">"\'/\'"</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"back"</span>&gt;</span>返回<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"handleClose"</span>&gt;</span>关闭<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"more"</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"right"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-header</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fixed</td>\n<td>固定在页面顶部</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>left</td>\n<td>左边显示元素</td>\n</tr>\n<tr>\n<td>right</td>\n<td>右边显示元素</td>\n</tr>\n</tbody>\n</table></div>');
},function(s,n,t){s.exports=t(136),"<h1>Indicator</h1>\n<blockquote>\n<p>加载提示框，支持自定义文本和加载图标。</p>\n</blockquote>\n<hr>\n<h2>引入</h2>\n<pre><code class=\"language-html\">import { Indicator } from 'mint-ui';\n</code></pre>\n<h2>例子</h2>\n<p>当需要显示加载提示框时，调用 <code>open</code> 方法</p>\n<pre><code class=\"language-html\">Indicator.open();\n</code></pre>\n<p>在加载图标下方显示文本</p>\n<pre><code class=\"language-html\">Indicator.open('加载中...');\n</code></pre>\n<p>也可以在调用时传入一个对象</p>\n<pre><code class=\"language-html\">Indicator.open({\n  text: '加载中...',\n  spinnerType: 'fading-circle'\n});\n</code></pre>\n<p>调用 <code>close</code> 方法将其关闭</p>\n<pre><code class=\"language-html\">Indicator.close();\n</code></pre>\n<h2>API</h2>\n<div class=\"table-container\"><table class=\"table\"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>文本内容</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>spinnerType</td>\n<td>加载图标的类型</td>\n<td>String</td>\n<td>'snake'<br>'fading-circle'<br>'double-bounce'<br>'triple-bounce'</td>\n<td>'snake'</td>\n</tr>\n</tbody>\n</table></div>"!==s.exports.template&&(s.exports.template="<h1>Indicator</h1>\n<blockquote>\n<p>加载提示框，支持自定义文本和加载图标。</p>\n</blockquote>\n<hr>\n<h2>引入</h2>\n<pre><code class=\"language-html\">import { Indicator } from 'mint-ui';\n</code></pre>\n<h2>例子</h2>\n<p>当需要显示加载提示框时，调用 <code>open</code> 方法</p>\n<pre><code class=\"language-html\">Indicator.open();\n</code></pre>\n<p>在加载图标下方显示文本</p>\n<pre><code class=\"language-html\">Indicator.open('加载中...');\n</code></pre>\n<p>也可以在调用时传入一个对象</p>\n<pre><code class=\"language-html\">Indicator.open({\n  text: '加载中...',\n  spinnerType: 'fading-circle'\n});\n</code></pre>\n<p>调用 <code>close</code> 方法将其关闭</p>\n<pre><code class=\"language-html\">Indicator.close();\n</code></pre>\n<h2>API</h2>\n<div class=\"table-container\"><table class=\"table\"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>文本内容</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>spinnerType</td>\n<td>加载图标的类型</td>\n<td>String</td>\n<td>'snake'<br>'fading-circle'<br>'double-bounce'<br>'triple-bounce'</td>\n<td>'snake'</td>\n</tr>\n</tbody>\n</table></div>")},function(s,n,t){s.exports=t(137),'<h1>Infinite scroll</h1>\n<blockquote>\n<p>无限滚动指令。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>为 HTML 元素添加 <code>v-infinite-scroll</code> 指令即可使用无限滚动。滚动该元素，当其底部与被滚动元素底部的距离小于给定的阈值（通过 <code>infinite-scroll-distance</code> 设置）时，绑定到 <code>v-infinite-scroll</code> 指令的方法就会被触发。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>\n  <span class="hljs-attr">v-infinite-scroll</span>=<span class="hljs-string">"loadMore()"</span>\n  <span class="hljs-attr">infinite-scroll-disabled</span>=<span class="hljs-string">"loading"</span>\n  <span class="hljs-attr">infinite-scroll-distance</span>=<span class="hljs-string">"10"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in list"</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n</code></pre>\n<pre><code class="language-javascript">loadMore() {\n  <span class="hljs-keyword">this</span>.loading = <span class="hljs-literal">true</span>;\n  setTimeout(() =&gt; {\n    <span class="hljs-keyword">let</span> last = <span class="hljs-keyword">this</span>.list[<span class="hljs-keyword">this</span>.list.length - <span class="hljs-number">1</span>];\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">10</span>; i++) {\n      <span class="hljs-keyword">this</span>.list.push(last + i);\n    }\n    <span class="hljs-keyword">this</span>.loading = <span class="hljs-literal">false</span>;\n  }, <span class="hljs-number">2500</span>);\n}\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>infinite-scroll-disabled</td>\n<td>若为真，则无限滚动不会被触发</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>infinite-scroll-distance</td>\n<td>触发加载方法的滚动距离阈值（像素）</td>\n<td>Number</td>\n<td></td>\n<td>0</td>\n</tr>\n<tr>\n<td>infinite-scroll-immediate-check</td>\n<td>若为真，则指令被绑定到元素上后会立即检查是否需要执行加载方法。在初始状态下内容有可能撑不满容器时十分有用。</td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n<tr>\n<td>infinite-scroll-listen-for-event</td>\n<td>一个 event，被执行时会立即检查是否需要执行加载方法。</td>\n<td>Function</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Infinite scroll</h1>\n<blockquote>\n<p>无限滚动指令。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>为 HTML 元素添加 <code>v-infinite-scroll</code> 指令即可使用无限滚动。滚动该元素，当其底部与被滚动元素底部的距离小于给定的阈值（通过 <code>infinite-scroll-distance</code> 设置）时，绑定到 <code>v-infinite-scroll</code> 指令的方法就会被触发。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>\n  <span class="hljs-attr">v-infinite-scroll</span>=<span class="hljs-string">"loadMore()"</span>\n  <span class="hljs-attr">infinite-scroll-disabled</span>=<span class="hljs-string">"loading"</span>\n  <span class="hljs-attr">infinite-scroll-distance</span>=<span class="hljs-string">"10"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in list"</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n</code></pre>\n<pre><code class="language-javascript">loadMore() {\n  <span class="hljs-keyword">this</span>.loading = <span class="hljs-literal">true</span>;\n  setTimeout(() =&gt; {\n    <span class="hljs-keyword">let</span> last = <span class="hljs-keyword">this</span>.list[<span class="hljs-keyword">this</span>.list.length - <span class="hljs-number">1</span>];\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">10</span>; i++) {\n      <span class="hljs-keyword">this</span>.list.push(last + i);\n    }\n    <span class="hljs-keyword">this</span>.loading = <span class="hljs-literal">false</span>;\n  }, <span class="hljs-number">2500</span>);\n}\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>infinite-scroll-disabled</td>\n<td>若为真，则无限滚动不会被触发</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>infinite-scroll-distance</td>\n<td>触发加载方法的滚动距离阈值（像素）</td>\n<td>Number</td>\n<td></td>\n<td>0</td>\n</tr>\n<tr>\n<td>infinite-scroll-immediate-check</td>\n<td>若为真，则指令被绑定到元素上后会立即检查是否需要执行加载方法。在初始状态下内容有可能撑不满容器时十分有用。</td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n<tr>\n<td>infinite-scroll-listen-for-event</td>\n<td>一个 event，被执行时会立即检查是否需要执行加载方法。</td>\n<td>Function</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(138),'<h1>Lazy load</h1>\n<blockquote>\n<p>图片懒加载指令。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>为 <code>img</code> 元素添加 <code>v-lazy</code> 指令，指令的值为图片的地址。同时需要设置图片在加载时的样式。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in list"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-lazy</span>=<span class="hljs-string">"item"</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n</code></pre>\n<pre><code class="language-css"><span class="hljs-selector-tag">image</span><span class="hljs-selector-attr">[lazy=loading]</span> {\n  <span class="hljs-attribute">width</span>: <span class="hljs-number">40px</span>;\n  <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;\n  <span class="hljs-attribute">margin</span>: auto;\n}\n</code></pre>\n<p>若列表不在 window 上滚动，则需要将被滚动元素的 id 属性以修饰符的形式传递给 <code>v-lazy</code> 指令</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"container"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in list"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-lazy.container</span>=<span class="hljs-string">"item"</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre>\n'!==s.exports.template&&(s.exports.template='<h1>Lazy load</h1>\n<blockquote>\n<p>图片懒加载指令。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>为 <code>img</code> 元素添加 <code>v-lazy</code> 指令，指令的值为图片的地址。同时需要设置图片在加载时的样式。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in list"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-lazy</span>=<span class="hljs-string">"item"</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n</code></pre>\n<pre><code class="language-css"><span class="hljs-selector-tag">image</span><span class="hljs-selector-attr">[lazy=loading]</span> {\n  <span class="hljs-attribute">width</span>: <span class="hljs-number">40px</span>;\n  <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;\n  <span class="hljs-attribute">margin</span>: auto;\n}\n</code></pre>\n<p>若列表不在 window 上滚动，则需要将被滚动元素的 id 属性以修饰符的形式传递给 <code>v-lazy</code> 指令</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"container"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in list"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-lazy.container</span>=<span class="hljs-string">"item"</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre>\n')},function(s,n,t){s.exports=t(139),'<h1>Loadmore</h1>\n<blockquote>\n<p>下拉/上拉刷新，支持自定义 HTML 模板。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-loadmore</span> <span class="hljs-attr">:top-method</span>=<span class="hljs-string">"loadTop"</span> <span class="hljs-attr">:bottom-method</span>=<span class="hljs-string">"loadBottom"</span> <span class="hljs-attr">:bottom-all-loaded</span>=<span class="hljs-string">"allLoaded"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in list"</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-loadmore</span>&gt;</span>\n</code></pre>\n<p>以列表顶部的下拉刷新为例：按住列表，下拉一定距离（通过 <code>topDistance</code> 配置）后释放，被指定为 <code>top-method</code> 的方法就会执行</p>\n<pre><code class="language-javascript">loadTop(id) {\n  ...<span class="hljs-comment">// 加载更多数据</span>\n  <span class="hljs-keyword">this</span>.$broadcast(<span class="hljs-string">\'onTopLoaded\'</span>, id);\n}\n</code></pre>\n<p>注意在这个方法的最后需要广播 <code>onTopLoaded</code> 事件，参数为 <code>id</code>。这是因为在加载数据后需要对组件进行一些重新定位的操作，<code>id</code> 参数能够避免在同一页面有多个 <code>loadmore</code> 实例时互相干扰。</p>\n<p>列表底部的上拉刷新与之类似</p>\n<pre><code class="language-javascript">loadBottom(id) {\n  ...<span class="hljs-comment">// 加载更多数据</span>\n  <span class="hljs-keyword">this</span>.allLoaded = <span class="hljs-literal">true</span>;<span class="hljs-comment">// 若数据已全部获取完毕</span>\n  <span class="hljs-keyword">this</span>.$broadcast(<span class="hljs-string">\'onBottomLoaded\'</span>, id);\n}\n</code></pre>\n<p>唯一的区别是，当底部数据全部获取完毕时，可以将绑定到组件 <code>bottom-all-loaded</code> 属性的变量赋值为 <code>true</code>，这样 <code>bottom-method</code> 就不会再次执行了。</p>\n<h2>自定义 HTML 模板</h2>\n<p>可以为列表顶部和底部的加载提示区域提供自定义的 HTML 模板</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-loadmore</span> <span class="hljs-attr">:top-method</span>=<span class="hljs-string">"loadTop"</span> <span class="hljs-attr">:top-status.sync</span>=<span class="hljs-string">"topStatus"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in list"</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"top"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mint-loadmore-top"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">"topStatus !== \'loading\'"</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">"{ \'rotate\': topStatus === \'drop\' }"</span>&gt;</span>↓<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">"topStatus === \'loading\'"</span>&gt;</span>Loading...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-loadmore</span>&gt;</span>\n</code></pre>\n<p>比如需要配置列表顶部的 HTML，则需要在 <code>loadmore</code> 标签上添加一个与 <code>top-status</code> 同步的变量，同时为自定义 HTML 模板的最外层标签设置 <code>slot</code> 属性为 <code>top</code>，类名为 <code>mint-loadmore-top</code>。<code>top-status</code> 有三个可能的值，表示组件目前所处的状态：</p>\n<ul>\n<li><code>pull</code>：组件已经被按下，但按下的距离未达到 <code>topDistance</code>，此时释放不会触发 <code>top-method</code>，列表会回到初始位置</li>\n<li><code>drop</code>：按下的距离不小于 <code>topDistance</code>，此时释放会触发 <code>top-method</code></li>\n<li><code>loading</code>：组件已被释放，<code>top-method</code> 正在执行</li>\n</ul>\n<h2>配置加载提示区域的文字</h2>\n<p>在不使用自定义 HTML 模板的情况下，可以配置 <code>loadmore</code> 本身自带的加载提示区域的文字。以列表顶部为例，对应于 <code>top-status</code> 的三个状态，可配置的属性依次为 <code>topPullText</code>、<code>topDropText</code> 和 <code>topLoadingText</code>。与之对应的底部属性为 <code>bottomPullText</code>、<code>bottomDropText</code> 和 <code>bottomLoadingText</code>。</p>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>topPullText</td>\n<td><code>topStatus</code> 为 <code>pull</code> 时加载提示区域的文字</td>\n<td>String</td>\n<td></td>\n<td>\'下拉刷新\'</td>\n</tr>\n<tr>\n<td>topDropText</td>\n<td><code>topStatus</code> 为 <code>drop</code> 时加载提示区域的文字</td>\n<td>String</td>\n<td></td>\n<td>\'释放更新\'</td>\n</tr>\n<tr>\n<td>topLoadingText</td>\n<td><code>topStatus</code> 为 <code>loading</code> 时加载提示区域的文字</td>\n<td>String</td>\n<td></td>\n<td>\'加载中...\'</td>\n</tr>\n<tr>\n<td>topDistance</td>\n<td>触发 <code>topMethod</code> 的下拉距离阈值（像素）</td>\n<td>Number</td>\n<td></td>\n<td>70</td>\n</tr>\n<tr>\n<td>topMethod</td>\n<td>下拉刷新执行的方法</td>\n<td>Function</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bottomPullText</td>\n<td><code>bottomStatus</code> 为 <code>pull</code> 时加载提示区域的文字</td>\n<td>String</td>\n<td></td>\n<td>\'上拉刷新\'</td>\n</tr>\n<tr>\n<td>bottomDropText</td>\n<td><code>bottomStatus</code> 为 <code>drop</code> 时加载提示区域的文字</td>\n<td>String</td>\n<td></td>\n<td>\'释放更新\'</td>\n</tr>\n<tr>\n<td>bottomLoadingText</td>\n<td><code>bottomStatus</code> 为 <code>loading</code> 时加载提示区域的文字</td>\n<td>String</td>\n<td></td>\n<td>\'加载中...\'</td>\n</tr>\n<tr>\n<td>bottomDistance</td>\n<td>触发 <code>bottomMethod</code> 的上拉距离阈值（像素）</td>\n<td>Number</td>\n<td></td>\n<td>70</td>\n</tr>\n<tr>\n<td>bottomMethod</td>\n<td>上拉刷新执行的方法</td>\n<td>Function</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bottomAllLoaded</td>\n<td>若为真，则 <code>bottomMethod</code> 不会被再次触发</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>数据列表</td>\n</tr>\n<tr>\n<td>top</td>\n<td>自定义顶部加载提示区域 HTML 模板</td>\n</tr>\n<tr>\n<td>bottom</td>\n<td>自定义底部加载提示区域 HTML 模板</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Loadmore</h1>\n<blockquote>\n<p>下拉/上拉刷新，支持自定义 HTML 模板。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-loadmore</span> <span class="hljs-attr">:top-method</span>=<span class="hljs-string">"loadTop"</span> <span class="hljs-attr">:bottom-method</span>=<span class="hljs-string">"loadBottom"</span> <span class="hljs-attr">:bottom-all-loaded</span>=<span class="hljs-string">"allLoaded"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in list"</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-loadmore</span>&gt;</span>\n</code></pre>\n<p>以列表顶部的下拉刷新为例：按住列表，下拉一定距离（通过 <code>topDistance</code> 配置）后释放，被指定为 <code>top-method</code> 的方法就会执行</p>\n<pre><code class="language-javascript">loadTop(id) {\n  ...<span class="hljs-comment">// 加载更多数据</span>\n  <span class="hljs-keyword">this</span>.$broadcast(<span class="hljs-string">\'onTopLoaded\'</span>, id);\n}\n</code></pre>\n<p>注意在这个方法的最后需要广播 <code>onTopLoaded</code> 事件，参数为 <code>id</code>。这是因为在加载数据后需要对组件进行一些重新定位的操作，<code>id</code> 参数能够避免在同一页面有多个 <code>loadmore</code> 实例时互相干扰。</p>\n<p>列表底部的上拉刷新与之类似</p>\n<pre><code class="language-javascript">loadBottom(id) {\n  ...<span class="hljs-comment">// 加载更多数据</span>\n  <span class="hljs-keyword">this</span>.allLoaded = <span class="hljs-literal">true</span>;<span class="hljs-comment">// 若数据已全部获取完毕</span>\n  <span class="hljs-keyword">this</span>.$broadcast(<span class="hljs-string">\'onBottomLoaded\'</span>, id);\n}\n</code></pre>\n<p>唯一的区别是，当底部数据全部获取完毕时，可以将绑定到组件 <code>bottom-all-loaded</code> 属性的变量赋值为 <code>true</code>，这样 <code>bottom-method</code> 就不会再次执行了。</p>\n<h2>自定义 HTML 模板</h2>\n<p>可以为列表顶部和底部的加载提示区域提供自定义的 HTML 模板</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-loadmore</span> <span class="hljs-attr">:top-method</span>=<span class="hljs-string">"loadTop"</span> <span class="hljs-attr">:top-status.sync</span>=<span class="hljs-string">"topStatus"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in list"</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"top"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mint-loadmore-top"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">"topStatus !== \'loading\'"</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">"{ \'rotate\': topStatus === \'drop\' }"</span>&gt;</span>↓<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">"topStatus === \'loading\'"</span>&gt;</span>Loading...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-loadmore</span>&gt;</span>\n</code></pre>\n<p>比如需要配置列表顶部的 HTML，则需要在 <code>loadmore</code> 标签上添加一个与 <code>top-status</code> 同步的变量，同时为自定义 HTML 模板的最外层标签设置 <code>slot</code> 属性为 <code>top</code>，类名为 <code>mint-loadmore-top</code>。<code>top-status</code> 有三个可能的值，表示组件目前所处的状态：</p>\n<ul>\n<li><code>pull</code>：组件已经被按下，但按下的距离未达到 <code>topDistance</code>，此时释放不会触发 <code>top-method</code>，列表会回到初始位置</li>\n<li><code>drop</code>：按下的距离不小于 <code>topDistance</code>，此时释放会触发 <code>top-method</code></li>\n<li><code>loading</code>：组件已被释放，<code>top-method</code> 正在执行</li>\n</ul>\n<h2>配置加载提示区域的文字</h2>\n<p>在不使用自定义 HTML 模板的情况下，可以配置 <code>loadmore</code> 本身自带的加载提示区域的文字。以列表顶部为例，对应于 <code>top-status</code> 的三个状态，可配置的属性依次为 <code>topPullText</code>、<code>topDropText</code> 和 <code>topLoadingText</code>。与之对应的底部属性为 <code>bottomPullText</code>、<code>bottomDropText</code> 和 <code>bottomLoadingText</code>。</p>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>topPullText</td>\n<td><code>topStatus</code> 为 <code>pull</code> 时加载提示区域的文字</td>\n<td>String</td>\n<td></td>\n<td>\'下拉刷新\'</td>\n</tr>\n<tr>\n<td>topDropText</td>\n<td><code>topStatus</code> 为 <code>drop</code> 时加载提示区域的文字</td>\n<td>String</td>\n<td></td>\n<td>\'释放更新\'</td>\n</tr>\n<tr>\n<td>topLoadingText</td>\n<td><code>topStatus</code> 为 <code>loading</code> 时加载提示区域的文字</td>\n<td>String</td>\n<td></td>\n<td>\'加载中...\'</td>\n</tr>\n<tr>\n<td>topDistance</td>\n<td>触发 <code>topMethod</code> 的下拉距离阈值（像素）</td>\n<td>Number</td>\n<td></td>\n<td>70</td>\n</tr>\n<tr>\n<td>topMethod</td>\n<td>下拉刷新执行的方法</td>\n<td>Function</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bottomPullText</td>\n<td><code>bottomStatus</code> 为 <code>pull</code> 时加载提示区域的文字</td>\n<td>String</td>\n<td></td>\n<td>\'上拉刷新\'</td>\n</tr>\n<tr>\n<td>bottomDropText</td>\n<td><code>bottomStatus</code> 为 <code>drop</code> 时加载提示区域的文字</td>\n<td>String</td>\n<td></td>\n<td>\'释放更新\'</td>\n</tr>\n<tr>\n<td>bottomLoadingText</td>\n<td><code>bottomStatus</code> 为 <code>loading</code> 时加载提示区域的文字</td>\n<td>String</td>\n<td></td>\n<td>\'加载中...\'</td>\n</tr>\n<tr>\n<td>bottomDistance</td>\n<td>触发 <code>bottomMethod</code> 的上拉距离阈值（像素）</td>\n<td>Number</td>\n<td></td>\n<td>70</td>\n</tr>\n<tr>\n<td>bottomMethod</td>\n<td>上拉刷新执行的方法</td>\n<td>Function</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bottomAllLoaded</td>\n<td>若为真，则 <code>bottomMethod</code> 不会被再次触发</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>数据列表</td>\n</tr>\n<tr>\n<td>top</td>\n<td>自定义顶部加载提示区域 HTML 模板</td>\n</tr>\n<tr>\n<td>bottom</td>\n<td>自定义底部加载提示区域 HTML 模板</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(140),'<h1>Message box</h1>\n<blockquote>\n<p>弹出式提示框，有多种交互形式。</p>\n</blockquote>\n<hr>\n<h2>引入</h2>\n<pre><code class="language-html">import { MessageBox } from \'mint-ui\';\n</code></pre>\n<h2>例子</h2>\n<p>以标题与内容字符串为参数进行调用</p>\n<pre><code class="language-html">MessageBox(\'提示\', \'操作成功\');\n</code></pre>\n<p>或者传入一个对象</p>\n<pre><code class="language-html">MessageBox({\n  title: \'提示\',\n  message: \'确定执行此操作?\',\n  showCancelButton: true\n});\n</code></pre>\n<p>此外，<code>MessageBox</code> 还提供了 <code>alert</code>、<code>confirm</code> 和 <code>prompt</code> 三个方法，它们都返回一个 Promise</p>\n<pre><code class="language-javascript">MessageBox.alert(message, title);\n</code></pre>\n<pre><code class="language-javascript">MessageBox.alert(<span class="hljs-string">\'操作成功\'</span>).then(action =&gt; {\n  ...\n});\n</code></pre>\n<pre><code class="language-javascript">MessageBox.confirm(message, title);\n</code></pre>\n<pre><code class="language-javascript">MessageBox.confirm(<span class="hljs-string">\'确定执行此操作?\'</span>).then(action =&gt; {\n  ...\n});\n</code></pre>\n<pre><code class="language-javascript">MessageBox.prompt(message, title);\n</code></pre>\n<pre><code class="language-javascript">MessageBox.prompt(<span class="hljs-string">\'请输入姓名\'</span>).then((value, action) =&gt; {\n  ...\n});\n</code></pre>\n<p>在 prompt 中，若用户点击了取消按钮，则 Promise 的状态会变为 rejected</p>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>提示框的标题</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>message</td>\n<td>提示框的内容</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>showConfirmButton</td>\n<td>是否显示确认按钮</td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n<tr>\n<td>showCancelButton</td>\n<td>是否显示取消按钮</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>confirmButtonText</td>\n<td>确认按钮的文本</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>confirmButtonHighlight</td>\n<td>是否将确认按钮的文本加粗显示</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>confirmButtonClass</td>\n<td>确认按钮的类名</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>cancelButtonText</td>\n<td>取消按钮的文本</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>cancelButtonHighlight</td>\n<td>是否将取消按钮的文本加粗显示</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>cancelButtonClass</td>\n<td>取消按钮的类名</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>showInput</td>\n<td>是否显示一个输入框</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>inputValue</td>\n<td>输入框的值</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>inputPlaceholder</td>\n<td>输入框的占位符</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Message box</h1>\n<blockquote>\n<p>弹出式提示框，有多种交互形式。</p>\n</blockquote>\n<hr>\n<h2>引入</h2>\n<pre><code class="language-html">import { MessageBox } from \'mint-ui\';\n</code></pre>\n<h2>例子</h2>\n<p>以标题与内容字符串为参数进行调用</p>\n<pre><code class="language-html">MessageBox(\'提示\', \'操作成功\');\n</code></pre>\n<p>或者传入一个对象</p>\n<pre><code class="language-html">MessageBox({\n  title: \'提示\',\n  message: \'确定执行此操作?\',\n  showCancelButton: true\n});\n</code></pre>\n<p>此外，<code>MessageBox</code> 还提供了 <code>alert</code>、<code>confirm</code> 和 <code>prompt</code> 三个方法，它们都返回一个 Promise</p>\n<pre><code class="language-javascript">MessageBox.alert(message, title);\n</code></pre>\n<pre><code class="language-javascript">MessageBox.alert(<span class="hljs-string">\'操作成功\'</span>).then(action =&gt; {\n  ...\n});\n</code></pre>\n<pre><code class="language-javascript">MessageBox.confirm(message, title);\n</code></pre>\n<pre><code class="language-javascript">MessageBox.confirm(<span class="hljs-string">\'确定执行此操作?\'</span>).then(action =&gt; {\n  ...\n});\n</code></pre>\n<pre><code class="language-javascript">MessageBox.prompt(message, title);\n</code></pre>\n<pre><code class="language-javascript">MessageBox.prompt(<span class="hljs-string">\'请输入姓名\'</span>).then((value, action) =&gt; {\n  ...\n});\n</code></pre>\n<p>在 prompt 中，若用户点击了取消按钮，则 Promise 的状态会变为 rejected</p>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>提示框的标题</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>message</td>\n<td>提示框的内容</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>showConfirmButton</td>\n<td>是否显示确认按钮</td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n<tr>\n<td>showCancelButton</td>\n<td>是否显示取消按钮</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>confirmButtonText</td>\n<td>确认按钮的文本</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>confirmButtonHighlight</td>\n<td>是否将确认按钮的文本加粗显示</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>confirmButtonClass</td>\n<td>确认按钮的类名</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>cancelButtonText</td>\n<td>取消按钮的文本</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>cancelButtonHighlight</td>\n<td>是否将取消按钮的文本加粗显示</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>cancelButtonClass</td>\n<td>取消按钮的类名</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>showInput</td>\n<td>是否显示一个输入框</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>inputValue</td>\n<td>输入框的值</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>inputPlaceholder</td>\n<td>输入框的占位符</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(141),'<h1>Navbar</h1>\n<blockquote>\n<p>顶部选项卡，与 <a v-link="{path:\'/tabbar\'}">Tabbar</a> 类似，依赖 tab-item 组件。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>搭配 <a v-link="{path:\'/tab-container\'}">tab-container</a> 组件使用</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-navbar</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"page-part"</span> <span class="hljs-attr">:selected.sync</span>=<span class="hljs-string">"selected"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"1"</span>&gt;</span>选项一<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"2"</span>&gt;</span>选项二<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"3"</span>&gt;</span>选项三<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-navbar</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- tab-container --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container</span> <span class="hljs-attr">:active.sync</span>=<span class="hljs-string">"selected"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"1"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"n in 10"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'内容 \' + n"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"n in 4"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'测试 \' + n"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"3"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"n in 6"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'选项 \' + n"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<h3>navbar</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fixed</td>\n<td>固定在页面顶部</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>selected</td>\n<td>返回当前选中的 tab-item 的 id</td>\n<td>*</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h3>tab-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>选中后的返回值</td>\n<td>*</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<h3>navbar</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>内容</td>\n</tr>\n</tbody>\n</table></div><h3>tab-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>显示文字</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>icon 图标</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Navbar</h1>\n<blockquote>\n<p>顶部选项卡，与 <a v-link="{path:\'/tabbar\'}">Tabbar</a> 类似，依赖 tab-item 组件。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>搭配 <a v-link="{path:\'/tab-container\'}">tab-container</a> 组件使用</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-navbar</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"page-part"</span> <span class="hljs-attr">:selected.sync</span>=<span class="hljs-string">"selected"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"1"</span>&gt;</span>选项一<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"2"</span>&gt;</span>选项二<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"3"</span>&gt;</span>选项三<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-navbar</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- tab-container --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container</span> <span class="hljs-attr">:active.sync</span>=<span class="hljs-string">"selected"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"1"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"n in 10"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'内容 \' + n"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"n in 4"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'测试 \' + n"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"3"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"n in 6"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'选项 \' + n"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<h3>navbar</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fixed</td>\n<td>固定在页面顶部</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>selected</td>\n<td>返回当前选中的 tab-item 的 id</td>\n<td>*</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h3>tab-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>选中后的返回值</td>\n<td>*</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<h3>navbar</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>内容</td>\n</tr>\n</tbody>\n</table></div><h3>tab-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>显示文字</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>icon 图标</td>\n</tr>\n</tbody>\n</table></div>');
},function(s,n,t){s.exports=t(142),'<h1>Picker</h1>\n<blockquote>\n<p>选择器，支持多 slot 联动。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>传入 <code>slots</code> ，当被选中的值发生变化时触发 <code>change</code> 事件。<code>change</code> 事件有两个参数，分别为当前 <code>picker</code> 的 vue 实例和各 slot 被选中的值组成的数组</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-picker</span> <span class="hljs-attr">:slots</span>=<span class="hljs-string">"slots"</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">"onValuesChange"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-picker</span>&gt;</span>\n</code></pre>\n<pre><code class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  methods: {\n    onValuesChange(picker, values) {\n      <span class="hljs-keyword">if</span> (values[<span class="hljs-number">0</span>] &gt; values[<span class="hljs-number">1</span>]) {\n        picker.setSlotValue(<span class="hljs-number">1</span>, values[<span class="hljs-number">0</span>]);\n      }\n    }\n  },\n  data() {\n    <span class="hljs-keyword">return</span> {\n      slots: [\n        {\n          flex: <span class="hljs-number">1</span>,\n          values: [<span class="hljs-string">\'2015-01\'</span>, <span class="hljs-string">\'2015-02\'</span>, <span class="hljs-string">\'2015-03\'</span>, <span class="hljs-string">\'2015-04\'</span>, <span class="hljs-string">\'2015-05\'</span>, <span class="hljs-string">\'2015-06\'</span>],\n          className: <span class="hljs-string">\'slot1\'</span>,\n          textAlign: <span class="hljs-string">\'right\'</span>\n        }, {\n          divider: <span class="hljs-literal">true</span>,\n          content: <span class="hljs-string">\'-\'</span>,\n          className: <span class="hljs-string">\'slot2\'</span>\n        }, {\n          flex: <span class="hljs-number">1</span>,\n          values: [<span class="hljs-string">\'2015-01\'</span>, <span class="hljs-string">\'2015-02\'</span>, <span class="hljs-string">\'2015-03\'</span>, <span class="hljs-string">\'2015-04\'</span>, <span class="hljs-string">\'2015-05\'</span>, <span class="hljs-string">\'2015-06\'</span>],\n          className: <span class="hljs-string">\'slot3\'</span>,\n          textAlign: <span class="hljs-string">\'left\'</span>\n        }\n      ]\n    };\n  }\n};\n</code></pre>\n<h2><code>change</code> 事件</h2>\n<p>在 <code>change</code> 事件中，可以使用注册到 <code>picker</code> 实例上的一些方法：</p>\n<ul>\n<li>getSlotValue(index)：获取给定 slot 目前被选中的值</li>\n<li>setSlotValue(index, value)：设定给定 slot 被选中的值，该值必须存在于该 slot 的备选值数组中</li>\n<li>getSlotValues(index)：获取给定 slot 的备选值数组</li>\n<li>setSlotValues(index, values)：设定给定 slot 的备选值数组</li>\n<li>getValues()：获取所有 slot 目前被选中的值（分隔符 slot 除外）</li>\n<li>setValues(values)：设定所有 slot 被选中的值（分隔符 slot 除外），该值必须存在于对应 slot 的备选值数组中</li>\n</ul>\n<h2><code>slots</code></h2>\n<p>绑定到 <code>slots</code> 属性的数组由对象组成，每个对象都对应一个 slot，它们有如下键名</p>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>key</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>divider</td>\n<td>对应 slot 是否为分隔符</td>\n</tr>\n<tr>\n<td>content</td>\n<td>分隔符 slot 的显示文本</td>\n</tr>\n<tr>\n<td>values</td>\n<td>对应 slot 的备选值数组</td>\n</tr>\n<tr>\n<td>textAlign</td>\n<td>对应 slot 的对齐方式</td>\n</tr>\n<tr>\n<td>flex</td>\n<td>对应 slot CSS 的 flex 值</td>\n</tr>\n<tr>\n<td>className</td>\n<td>对应 slot 的类名</td>\n</tr>\n</tbody>\n</table></div><h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>slots</td>\n<td>slot 对象数组</td>\n<td>Array</td>\n<td></td>\n<td>[]</td>\n</tr>\n<tr>\n<td>showToolbar</td>\n<td>是否在组件顶部显示一个 toolbar，内容自定义</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>visibleItemCount</td>\n<td>slot 中可见备选值的个数</td>\n<td>Number</td>\n<td></td>\n<td>5</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>当 showToolbar 为 true 时，toolbar 中的内容</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Picker</h1>\n<blockquote>\n<p>选择器，支持多 slot 联动。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>传入 <code>slots</code> ，当被选中的值发生变化时触发 <code>change</code> 事件。<code>change</code> 事件有两个参数，分别为当前 <code>picker</code> 的 vue 实例和各 slot 被选中的值组成的数组</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-picker</span> <span class="hljs-attr">:slots</span>=<span class="hljs-string">"slots"</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">"onValuesChange"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-picker</span>&gt;</span>\n</code></pre>\n<pre><code class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  methods: {\n    onValuesChange(picker, values) {\n      <span class="hljs-keyword">if</span> (values[<span class="hljs-number">0</span>] &gt; values[<span class="hljs-number">1</span>]) {\n        picker.setSlotValue(<span class="hljs-number">1</span>, values[<span class="hljs-number">0</span>]);\n      }\n    }\n  },\n  data() {\n    <span class="hljs-keyword">return</span> {\n      slots: [\n        {\n          flex: <span class="hljs-number">1</span>,\n          values: [<span class="hljs-string">\'2015-01\'</span>, <span class="hljs-string">\'2015-02\'</span>, <span class="hljs-string">\'2015-03\'</span>, <span class="hljs-string">\'2015-04\'</span>, <span class="hljs-string">\'2015-05\'</span>, <span class="hljs-string">\'2015-06\'</span>],\n          className: <span class="hljs-string">\'slot1\'</span>,\n          textAlign: <span class="hljs-string">\'right\'</span>\n        }, {\n          divider: <span class="hljs-literal">true</span>,\n          content: <span class="hljs-string">\'-\'</span>,\n          className: <span class="hljs-string">\'slot2\'</span>\n        }, {\n          flex: <span class="hljs-number">1</span>,\n          values: [<span class="hljs-string">\'2015-01\'</span>, <span class="hljs-string">\'2015-02\'</span>, <span class="hljs-string">\'2015-03\'</span>, <span class="hljs-string">\'2015-04\'</span>, <span class="hljs-string">\'2015-05\'</span>, <span class="hljs-string">\'2015-06\'</span>],\n          className: <span class="hljs-string">\'slot3\'</span>,\n          textAlign: <span class="hljs-string">\'left\'</span>\n        }\n      ]\n    };\n  }\n};\n</code></pre>\n<h2><code>change</code> 事件</h2>\n<p>在 <code>change</code> 事件中，可以使用注册到 <code>picker</code> 实例上的一些方法：</p>\n<ul>\n<li>getSlotValue(index)：获取给定 slot 目前被选中的值</li>\n<li>setSlotValue(index, value)：设定给定 slot 被选中的值，该值必须存在于该 slot 的备选值数组中</li>\n<li>getSlotValues(index)：获取给定 slot 的备选值数组</li>\n<li>setSlotValues(index, values)：设定给定 slot 的备选值数组</li>\n<li>getValues()：获取所有 slot 目前被选中的值（分隔符 slot 除外）</li>\n<li>setValues(values)：设定所有 slot 被选中的值（分隔符 slot 除外），该值必须存在于对应 slot 的备选值数组中</li>\n</ul>\n<h2><code>slots</code></h2>\n<p>绑定到 <code>slots</code> 属性的数组由对象组成，每个对象都对应一个 slot，它们有如下键名</p>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>key</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>divider</td>\n<td>对应 slot 是否为分隔符</td>\n</tr>\n<tr>\n<td>content</td>\n<td>分隔符 slot 的显示文本</td>\n</tr>\n<tr>\n<td>values</td>\n<td>对应 slot 的备选值数组</td>\n</tr>\n<tr>\n<td>textAlign</td>\n<td>对应 slot 的对齐方式</td>\n</tr>\n<tr>\n<td>flex</td>\n<td>对应 slot CSS 的 flex 值</td>\n</tr>\n<tr>\n<td>className</td>\n<td>对应 slot 的类名</td>\n</tr>\n</tbody>\n</table></div><h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>slots</td>\n<td>slot 对象数组</td>\n<td>Array</td>\n<td></td>\n<td>[]</td>\n</tr>\n<tr>\n<td>showToolbar</td>\n<td>是否在组件顶部显示一个 toolbar，内容自定义</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>visibleItemCount</td>\n<td>slot 中可见备选值的个数</td>\n<td>Number</td>\n<td></td>\n<td>5</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>当 showToolbar 为 true 时，toolbar 中的内容</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(143),'<h1>Popup</h1>\n<blockquote>\n<p>弹出框，可自定义内容。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p><code>position</code> 属性指定了 <code>popup</code> 的位置。比如，<code>position</code> 为 \'bottom\' 时，<code>popup</code> 会从屏幕下方移入，并最终固定在屏幕下方。移入/移出的动效会根据 <code>position</code> 的不同而自动改变，无需手动配置。</p>\n<p>将 <code>visible</code> 属性与一个本地变量同步，通过操作这个变量即可控制 <code>popup</code> 的显示与隐藏。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-popup</span>\n  <span class="hljs-attr">:visible.sync</span>=<span class="hljs-string">"popupVisible"</span>\n  <span class="hljs-attr">position</span>=<span class="hljs-string">"bottom"</span>&gt;</span>\n  ...\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-popup</span>&gt;</span>\n</code></pre>\n<p>若省略 <code>position</code> 属性，则 <code>popup</code> 会相对于屏幕居中显示（若不想让其居中，可通过 CSS 对其重新定位）。此时建议将动效设置为 <code>popup-fade</code>，这样在显示/隐藏时会有淡入/淡出效果。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-popup</span>\n  <span class="hljs-attr">:visible.sync</span>=<span class="hljs-string">"popupVisible"</span>\n  <span class="hljs-attr">popup-transition</span>=<span class="hljs-string">"popup-fade"</span>&gt;</span>\n  ...\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-popup</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>visible</td>\n<td>是否显示 <code>popup</code></td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>position</td>\n<td><code>popup</code> 的位置。省略则居中显示</td>\n<td>String</td>\n<td>\'top\'<br>\'right\'<br>\'bottom\'<br>\'left\'</td>\n<td></td>\n</tr>\n<tr>\n<td>pop-transition</td>\n<td>显示/隐藏时的动效，仅在省略 <code>position</code> 时可配置</td>\n<td>String</td>\n<td>\'popup-fade\'</td>\n<td></td>\n</tr>\n<tr>\n<td>modal</td>\n<td>是否创建一个 modal 层</td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n<tr>\n<td>closeOnClickModal</td>\n<td>是否可以通过点击 modal 层来关闭 <code>popup</code></td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>弹出框的内容</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Popup</h1>\n<blockquote>\n<p>弹出框，可自定义内容。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p><code>position</code> 属性指定了 <code>popup</code> 的位置。比如，<code>position</code> 为 \'bottom\' 时，<code>popup</code> 会从屏幕下方移入，并最终固定在屏幕下方。移入/移出的动效会根据 <code>position</code> 的不同而自动改变，无需手动配置。</p>\n<p>将 <code>visible</code> 属性与一个本地变量同步，通过操作这个变量即可控制 <code>popup</code> 的显示与隐藏。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-popup</span>\n  <span class="hljs-attr">:visible.sync</span>=<span class="hljs-string">"popupVisible"</span>\n  <span class="hljs-attr">position</span>=<span class="hljs-string">"bottom"</span>&gt;</span>\n  ...\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-popup</span>&gt;</span>\n</code></pre>\n<p>若省略 <code>position</code> 属性，则 <code>popup</code> 会相对于屏幕居中显示（若不想让其居中，可通过 CSS 对其重新定位）。此时建议将动效设置为 <code>popup-fade</code>，这样在显示/隐藏时会有淡入/淡出效果。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-popup</span>\n  <span class="hljs-attr">:visible.sync</span>=<span class="hljs-string">"popupVisible"</span>\n  <span class="hljs-attr">popup-transition</span>=<span class="hljs-string">"popup-fade"</span>&gt;</span>\n  ...\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-popup</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>visible</td>\n<td>是否显示 <code>popup</code></td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>position</td>\n<td><code>popup</code> 的位置。省略则居中显示</td>\n<td>String</td>\n<td>\'top\'<br>\'right\'<br>\'bottom\'<br>\'left\'</td>\n<td></td>\n</tr>\n<tr>\n<td>pop-transition</td>\n<td>显示/隐藏时的动效，仅在省略 <code>position</code> 时可配置</td>\n<td>String</td>\n<td>\'popup-fade\'</td>\n<td></td>\n</tr>\n<tr>\n<td>modal</td>\n<td>是否创建一个 modal 层</td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n<tr>\n<td>closeOnClickModal</td>\n<td>是否可以通过点击 modal 层来关闭 <code>popup</code></td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>弹出框的内容</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(144),'<h1>Range</h1>\n<blockquote>\n<p>进度条。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>传入 <code>value</code> 作为进度条的宽度。可自定义它的线宽</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-progress</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">"20"</span> <span class="hljs-attr">:bar-height</span>=<span class="hljs-string">"5"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-progress</span>&gt;</span>\n</code></pre>\n<p>可在进度条两侧显示文字</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-progress</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">"60"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"start"</span>&gt;</span>0%<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"end"</span>&gt;</span>100%<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-progress</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>进度条的值（%）</td>\n<td>Number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>barHeight</td>\n<td>进度条的线宽（像素）</td>\n<td>Number</td>\n<td></td>\n<td>1</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>start</td>\n<td>进度条左侧 DOM</td>\n</tr>\n<tr>\n<td>end</td>\n<td>进度条右侧 DOM</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Range</h1>\n<blockquote>\n<p>进度条。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>传入 <code>value</code> 作为进度条的宽度。可自定义它的线宽</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-progress</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">"20"</span> <span class="hljs-attr">:bar-height</span>=<span class="hljs-string">"5"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-progress</span>&gt;</span>\n</code></pre>\n<p>可在进度条两侧显示文字</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-progress</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">"60"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"start"</span>&gt;</span>0%<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"end"</span>&gt;</span>100%<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-progress</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>进度条的值（%）</td>\n<td>Number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>barHeight</td>\n<td>进度条的线宽（像素）</td>\n<td>Number</td>\n<td></td>\n<td>1</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>start</td>\n<td>进度条左侧 DOM</td>\n</tr>\n<tr>\n<td>end</td>\n<td>进度条右侧 DOM</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(145),'<h1>Radio</h1>\n<blockquote>\n<p>单选框列表，依赖 <a v-link="{path:\'/cell\'}">cell</a> 组件。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>基本用法</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-radio</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"单选框列表"</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"[\'选项A\', \'选项B\', \'选项C\']"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-radio</span>&gt;</span>\n</code></pre>\n<p>设置禁用选项</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">this</span>.options = [\n  {\n    label: <span class="hljs-string">\'被禁用\'</span>,\n    value: <span class="hljs-string">\'值F\'</span>,\n    disabled: <span class="hljs-literal">true</span>\n  },\n  {\n    label: <span class="hljs-string">\'选项A\'</span>,\n    value: <span class="hljs-string">\'值A\'</span>\n  },\n  {\n    label: <span class="hljs-string">\'选项B\'</span>,\n    value: <span class="hljs-string">\'值B\'</span>\n  }\n];\n</code></pre>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-radio</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"单选框列表"</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"options"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-radio</span>&gt;</span>\n</code></pre>\n<p>单选框右对齐</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-radio</span>\n  <span class="hljs-attr">align</span>=<span class="hljs-string">"right"</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"右对齐"</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"options"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-radio</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>options</td>\n<td>选择项</td>\n<td>Array</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>绑定值</td>\n<td>Array</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题，显示在列表上方</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>align</td>\n<td>单选框对其位置</td>\n<td>String</td>\n<td>left, right</td>\n<td>left</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Radio</h1>\n<blockquote>\n<p>单选框列表，依赖 <a v-link="{path:\'/cell\'}">cell</a> 组件。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>基本用法</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-radio</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"单选框列表"</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"[\'选项A\', \'选项B\', \'选项C\']"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-radio</span>&gt;</span>\n</code></pre>\n<p>设置禁用选项</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">this</span>.options = [\n  {\n    label: <span class="hljs-string">\'被禁用\'</span>,\n    value: <span class="hljs-string">\'值F\'</span>,\n    disabled: <span class="hljs-literal">true</span>\n  },\n  {\n    label: <span class="hljs-string">\'选项A\'</span>,\n    value: <span class="hljs-string">\'值A\'</span>\n  },\n  {\n    label: <span class="hljs-string">\'选项B\'</span>,\n    value: <span class="hljs-string">\'值B\'</span>\n  }\n];\n</code></pre>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-radio</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"单选框列表"</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"options"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-radio</span>&gt;</span>\n</code></pre>\n<p>单选框右对齐</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-radio</span>\n  <span class="hljs-attr">align</span>=<span class="hljs-string">"right"</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"右对齐"</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">"options"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-radio</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>options</td>\n<td>选择项</td>\n<td>Array</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>绑定值</td>\n<td>Array</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题，显示在列表上方</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>align</td>\n<td>单选框对其位置</td>\n<td>String</td>\n<td>left, right</td>\n<td>left</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(146),'<h1>Range</h1>\n<blockquote>\n<p>滑块，支持自定义步长、区间等。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>将一个本地变量与 <code>range</code> 的 <code>value</code> 属性同步即可实现双向绑定</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-range</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"rangeValue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-range</span>&gt;</span>\n</code></pre>\n<p>更多的配置项</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-range</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"rangeValue"</span>\n  <span class="hljs-attr">:min</span>=<span class="hljs-string">"10"</span>\n  <span class="hljs-attr">:max</span>=<span class="hljs-string">"90"</span>\n  <span class="hljs-attr">:step</span>=<span class="hljs-string">"10"</span>\n  <span class="hljs-attr">:bar-height</span>=<span class="hljs-string">"5"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-range</span>&gt;</span>\n</code></pre>\n<p>可在滑块两侧显示文字</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-range</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"rangeValue"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"start"</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"end"</span>&gt;</span>100<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-range</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>滑块的值</td>\n<td>Number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>min</td>\n<td>最小值</td>\n<td>Number</td>\n<td></td>\n<td>0</td>\n</tr>\n<tr>\n<td>max</td>\n<td>最大值</td>\n<td>Number</td>\n<td></td>\n<td>100</td>\n</tr>\n<tr>\n<td>step</td>\n<td>步长</td>\n<td>Number</td>\n<td></td>\n<td>1</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>barHeight</td>\n<td>滑槽的线宽（像素）</td>\n<td>Number</td>\n<td></td>\n<td>1</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>start</td>\n<td>滑块左侧 DOM</td>\n</tr>\n<tr>\n<td>end</td>\n<td>滑块右侧 DOM</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Range</h1>\n<blockquote>\n<p>滑块，支持自定义步长、区间等。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>将一个本地变量与 <code>range</code> 的 <code>value</code> 属性同步即可实现双向绑定</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-range</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"rangeValue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-range</span>&gt;</span>\n</code></pre>\n<p>更多的配置项</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-range</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"rangeValue"</span>\n  <span class="hljs-attr">:min</span>=<span class="hljs-string">"10"</span>\n  <span class="hljs-attr">:max</span>=<span class="hljs-string">"90"</span>\n  <span class="hljs-attr">:step</span>=<span class="hljs-string">"10"</span>\n  <span class="hljs-attr">:bar-height</span>=<span class="hljs-string">"5"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-range</span>&gt;</span>\n</code></pre>\n<p>可在滑块两侧显示文字</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-range</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"rangeValue"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"start"</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"end"</span>&gt;</span>100<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-range</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>滑块的值</td>\n<td>Number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>min</td>\n<td>最小值</td>\n<td>Number</td>\n<td></td>\n<td>0</td>\n</tr>\n<tr>\n<td>max</td>\n<td>最大值</td>\n<td>Number</td>\n<td></td>\n<td>100</td>\n</tr>\n<tr>\n<td>step</td>\n<td>步长</td>\n<td>Number</td>\n<td></td>\n<td>1</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>barHeight</td>\n<td>滑槽的线宽（像素）</td>\n<td>Number</td>\n<td></td>\n<td>1</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>start</td>\n<td>滑块左侧 DOM</td>\n</tr>\n<tr>\n<td>end</td>\n<td>滑块右侧 DOM</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(148),'<h1>Search</h1>\n<blockquote>\n<p>搜索框，可显示搜索结果列表。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>基础用法</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-search</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-search</span>&gt;</span>\n</code></pre>\n<p>设置显示文字</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-search</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">cancel-text</span>=<span class="hljs-string">"取消"</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"搜索"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-search</span>&gt;</span>\n</code></pre>\n<p>带搜索结果</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-search</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span> <span class="hljs-attr">:result.sync</span>=<span class="hljs-string">"result"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-search</span>&gt;</span>\n</code></pre>\n<p>自定义搜索结果</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-search</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span>\n    <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in result"</span>\n    <span class="hljs-attr">:title</span>=<span class="hljs-string">"item.title"</span>\n    <span class="hljs-attr">:value</span>=<span class="hljs-string">"item.value"</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-search</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>string</td>\n<td>搜索结果绑定值</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>cancel-text</td>\n<td>取消按钮文字</td>\n<td>String</td>\n<td></td>\n<td>取消</td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>搜索框占位内容</td>\n<td>String</td>\n<td></td>\n<td>搜索</td>\n</tr>\n<tr>\n<td>result</td>\n<td>搜索结果列表</td>\n<td>Array</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>自定义搜索结果列表</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Search</h1>\n<blockquote>\n<p>搜索框，可显示搜索结果列表。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>基础用法</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-search</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-search</span>&gt;</span>\n</code></pre>\n<p>设置显示文字</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-search</span>\n  <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>\n  <span class="hljs-attr">cancel-text</span>=<span class="hljs-string">"取消"</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"搜索"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-search</span>&gt;</span>\n</code></pre>\n<p>带搜索结果</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-search</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span> <span class="hljs-attr">:result.sync</span>=<span class="hljs-string">"result"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-search</span>&gt;</span>\n</code></pre>\n<p>自定义搜索结果</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-search</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span>\n    <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in result"</span>\n    <span class="hljs-attr">:title</span>=<span class="hljs-string">"item.title"</span>\n    <span class="hljs-attr">:value</span>=<span class="hljs-string">"item.value"</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-search</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>string</td>\n<td>搜索结果绑定值</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>cancel-text</td>\n<td>取消按钮文字</td>\n<td>String</td>\n<td></td>\n<td>取消</td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>搜索框占位内容</td>\n<td>String</td>\n<td></td>\n<td>搜索</td>\n</tr>\n<tr>\n<td>result</td>\n<td>搜索结果列表</td>\n<td>Array</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>自定义搜索结果列表</td>\n</tr>\n</tbody>\n</table></div>');
},function(s,n,t){s.exports=t(149),'<h1>Spinner</h1>\n<blockquote>\n<p>加载动画，可指定显示类型、尺寸和颜色。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>指定类型</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"snake"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"double-bounce"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"triple-bounce"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"fading-circle"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 或者接受传入类型的序号 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">:type</span>=<span class="hljs-string">"0"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">:type</span>=<span class="hljs-string">"1"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">:type</span>=<span class="hljs-string">"2"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">:type</span>=<span class="hljs-string">"3"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n</code></pre>\n<p>指定颜色</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"#26a2ff"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"rgb(100, 100, 100)"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"yellow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n</code></pre>\n<p>指定尺寸</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">:size</span>=<span class="hljs-string">"60"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>显示类型，提供四种风格，可以指定名称或者序号</td>\n<td>String、Number</td>\n<td>snake <br> double-bounce <br> triple-bounce <br> fading-circle</td>\n<td>snake</td>\n</tr>\n<tr>\n<td>color</td>\n<td>颜色，接受 hex、rgb 等颜色值</td>\n<td>String</td>\n<td></td>\n<td>#ccc</td>\n</tr>\n<tr>\n<td>size</td>\n<td>尺寸，单位 px</td>\n<td>Number</td>\n<td></td>\n<td>28</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Spinner</h1>\n<blockquote>\n<p>加载动画，可指定显示类型、尺寸和颜色。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>指定类型</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"snake"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"double-bounce"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"triple-bounce"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"fading-circle"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 或者接受传入类型的序号 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">:type</span>=<span class="hljs-string">"0"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">:type</span>=<span class="hljs-string">"1"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">:type</span>=<span class="hljs-string">"2"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">:type</span>=<span class="hljs-string">"3"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n</code></pre>\n<p>指定颜色</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"#26a2ff"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"rgb(100, 100, 100)"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"yellow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n</code></pre>\n<p>指定尺寸</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-spinner</span> <span class="hljs-attr">:size</span>=<span class="hljs-string">"60"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-spinner</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>显示类型，提供四种风格，可以指定名称或者序号</td>\n<td>String、Number</td>\n<td>snake <br> double-bounce <br> triple-bounce <br> fading-circle</td>\n<td>snake</td>\n</tr>\n<tr>\n<td>color</td>\n<td>颜色，接受 hex、rgb 等颜色值</td>\n<td>String</td>\n<td></td>\n<td>#ccc</td>\n</tr>\n<tr>\n<td>size</td>\n<td>尺寸，单位 px</td>\n<td>Number</td>\n<td></td>\n<td>28</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(150),'<h1>Swipe</h1>\n<blockquote>\n<p>轮播图，可自定义轮播时间间隔、动画时长等。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>基础用法</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe</span> <span class="hljs-attr">:auto</span>=<span class="hljs-string">"4000"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe</span>&gt;</span>\n</code></pre>\n<p>隐藏 indicators</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe</span> <span class="hljs-attr">:show-indicators</span>=<span class="hljs-string">"false"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe</span>&gt;</span>\n</code></pre>\n<p>取消自动播放</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe</span> <span class="hljs-attr">:auto</span>=<span class="hljs-string">"0"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>speed</td>\n<td>动画持时（毫秒）</td>\n<td>Number</td>\n<td></td>\n<td>300</td>\n</tr>\n<tr>\n<td>auto</td>\n<td>自动播放的时间间隔（毫秒）</td>\n<td>Number</td>\n<td></td>\n<td>3000</td>\n</tr>\n<tr>\n<td>continuous</td>\n<td>是否可以循环播放</td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n<tr>\n<td>showIndicators</td>\n<td>是否显示 indicators</td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n<tr>\n<td>prevent</td>\n<td>是否在 touchstart 事件触发时阻止事件的默认行为。设为 true 可提高运行在低版本安卓浏览器时的性能</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<h3>mt-swipe</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>一个或多个 <code>mt-swipe-item</code> 组件</td>\n</tr>\n</tbody>\n</table></div><h3>mt-swipe-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>单个轮播图的内容</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Swipe</h1>\n<blockquote>\n<p>轮播图，可自定义轮播时间间隔、动画时长等。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>基础用法</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe</span> <span class="hljs-attr">:auto</span>=<span class="hljs-string">"4000"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe</span>&gt;</span>\n</code></pre>\n<p>隐藏 indicators</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe</span> <span class="hljs-attr">:show-indicators</span>=<span class="hljs-string">"false"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe</span>&gt;</span>\n</code></pre>\n<p>取消自动播放</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe</span> <span class="hljs-attr">:auto</span>=<span class="hljs-string">"0"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>speed</td>\n<td>动画持时（毫秒）</td>\n<td>Number</td>\n<td></td>\n<td>300</td>\n</tr>\n<tr>\n<td>auto</td>\n<td>自动播放的时间间隔（毫秒）</td>\n<td>Number</td>\n<td></td>\n<td>3000</td>\n</tr>\n<tr>\n<td>continuous</td>\n<td>是否可以循环播放</td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n<tr>\n<td>showIndicators</td>\n<td>是否显示 indicators</td>\n<td>Boolean</td>\n<td></td>\n<td>true</td>\n</tr>\n<tr>\n<td>prevent</td>\n<td>是否在 touchstart 事件触发时阻止事件的默认行为。设为 true 可提高运行在低版本安卓浏览器时的性能</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<h3>mt-swipe</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>一个或多个 <code>mt-swipe-item</code> 组件</td>\n</tr>\n</tbody>\n</table></div><h3>mt-swipe-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>单个轮播图的内容</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(151),'<h1>Switch</h1>\n<blockquote>\n<p>开关。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-switch</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-switch</span>&gt;</span>\n</code></pre>\n<p>带显示内容</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-switch</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>&gt;</span>开关<span class="hljs-tag">&lt;/<span class="hljs-name">mt-switch</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>绑定值</td>\n<td>Boolean</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>显示内容</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Switch</h1>\n<blockquote>\n<p>开关。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-switch</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-switch</span>&gt;</span>\n</code></pre>\n<p>带显示内容</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-switch</span> <span class="hljs-attr">:value.sync</span>=<span class="hljs-string">"value"</span>&gt;</span>开关<span class="hljs-tag">&lt;/<span class="hljs-name">mt-switch</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>绑定值</td>\n<td>Boolean</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>显示内容</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(152),'<h1>tab-container</h1>\n<blockquote>\n<p>面板，可切换显示子页面。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>改变 ative 的值，与 <code>&lt;tab-container-item&gt;</code> 的 id 一致即显示对应页面。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"page-tabbar-tab-container"</span> <span class="hljs-attr">:active.sync</span>=<span class="hljs-string">"active"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tab-container1"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"n in 10"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'tab-container1 \' + $index"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tab-container2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"n in 5"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'tab-container2 \' + $index"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tab-container3"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"n in 7"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'tab-container3 \' + $index"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<h3>tab-container</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>active</td>\n<td>当前激活的 id</td>\n<td>*</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h3>tab-container-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>item 的 id</td>\n<td>*</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<h3>tab-container</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>内容</td>\n</tr>\n</tbody>\n</table></div><h3>tab-container-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>内容</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>tab-container</h1>\n<blockquote>\n<p>面板，可切换显示子页面。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>改变 ative 的值，与 <code>&lt;tab-container-item&gt;</code> 的 id 一致即显示对应页面。</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"page-tabbar-tab-container"</span> <span class="hljs-attr">:active.sync</span>=<span class="hljs-string">"active"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tab-container1"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"n in 10"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'tab-container1 \' + $index"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tab-container2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"n in 5"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'tab-container2 \' + $index"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tab-container3"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"n in 7"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'tab-container3 \' + $index"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<h3>tab-container</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>active</td>\n<td>当前激活的 id</td>\n<td>*</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h3>tab-container-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>item 的 id</td>\n<td>*</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<h3>tab-container</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>内容</td>\n</tr>\n</tbody>\n</table></div><h3>tab-container-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>内容</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(153),'<h1>Tabbar</h1>\n<blockquote>\n<p>底部选项卡，点击 tab 会切换显示的页面。依赖 tab-item 组件。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>搭配 <a v-link="{path:\'/tab-container\'}">tab-container</a> 组件使用</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-tabbar</span> <span class="hljs-attr">:selected.sync</span>=<span class="hljs-string">"selected"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"外卖"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../assets/100x100.png"</span>&gt;</span>\n    外卖\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"订单"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../assets/100x100.png"</span>&gt;</span>\n    订单\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"发现"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../assets/100x100.png"</span>&gt;</span>\n    发现\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"我的"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../assets/100x100.png"</span>&gt;</span>\n    我的\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tabbar</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<h3>tabbar</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fixed</td>\n<td>固定在页面底部</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>selected</td>\n<td>返回当前选中的 tab-item 的 id</td>\n<td>*</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h3>tab-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>选中后的返回值</td>\n<td>*</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<h3>tabbar</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>内容</td>\n</tr>\n</tbody>\n</table></div><h3>tab-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>显示文字</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>icon 图标</td>\n</tr>\n</tbody>\n</table></div>'!==s.exports.template&&(s.exports.template='<h1>Tabbar</h1>\n<blockquote>\n<p>底部选项卡，点击 tab 会切换显示的页面。依赖 tab-item 组件。</p>\n</blockquote>\n<hr>\n<h2>例子</h2>\n<p>搭配 <a v-link="{path:\'/tab-container\'}">tab-container</a> 组件使用</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">mt-tabbar</span> <span class="hljs-attr">:selected.sync</span>=<span class="hljs-string">"selected"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"外卖"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../assets/100x100.png"</span>&gt;</span>\n    外卖\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"订单"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../assets/100x100.png"</span>&gt;</span>\n    订单\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"发现"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../assets/100x100.png"</span>&gt;</span>\n    发现\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"我的"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../assets/100x100.png"</span>&gt;</span>\n    我的\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tabbar</span>&gt;</span>\n</code></pre>\n<h2>API</h2>\n<h3>tabbar</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fixed</td>\n<td>固定在页面底部</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n<tr>\n<td>selected</td>\n<td>返回当前选中的 tab-item 的 id</td>\n<td>*</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h3>tab-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>选中后的返回值</td>\n<td>*</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div><h2>Slot</h2>\n<h3>tabbar</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>内容</td>\n</tr>\n</tbody>\n</table></div><h3>tab-item</h3>\n<div class="table-container"><table class="table"><thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>显示文字</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>icon 图标</td>\n</tr>\n</tbody>\n</table></div>')},function(s,n,t){s.exports=t(154),"<h1>Toast</h1>\n<blockquote>\n<p>简短的消息提示框，支持自定义位置、持续时间和样式。</p>\n</blockquote>\n<hr>\n<h2>引入</h2>\n<pre><code class=\"language-html\">import { Toast } from 'mint-ui';\n</code></pre>\n<h2>例子</h2>\n<p>基本用法</p>\n<pre><code class=\"language-html\">Toast('提示信息');\n</code></pre>\n<p>在调用 <code>Toast</code> 时传入一个对象即可配置更多选项</p>\n<pre><code class=\"language-html\">Toast({\n  message: '提示',\n  position: 'bottom',\n  duration: 5000\n});\n</code></pre>\n<p>若需在文字上方显示一个 icon 图标，可以将图标的类名作为 <code>iconClass</code> 的值传给 <code>Toast</code>（图标需自行准备）</p>\n<pre><code class=\"language-html\">Toast({\n  message: '操作成功',\n  iconClass: 'icon icon-success'\n});\n</code></pre>\n<h2>API</h2>\n<div class=\"table-container\"><table class=\"table\"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>message</td>\n<td>文本内容</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>position</td>\n<td>Toast 的位置</td>\n<td>String</td>\n<td>'top'<br>'bottom'<br>'middle'</td>\n<td>'middle'</td>\n</tr>\n<tr>\n<td>duration</td>\n<td>持续时间（毫秒）</td>\n<td>Number</td>\n<td></td>\n<td>3000</td>\n</tr>\n<tr>\n<td>className</td>\n<td>Toast 的类名。可以为其添加样式</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>iconClass</td>\n<td>icon 图标的类名</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div>"!==s.exports.template&&(s.exports.template="<h1>Toast</h1>\n<blockquote>\n<p>简短的消息提示框，支持自定义位置、持续时间和样式。</p>\n</blockquote>\n<hr>\n<h2>引入</h2>\n<pre><code class=\"language-html\">import { Toast } from 'mint-ui';\n</code></pre>\n<h2>例子</h2>\n<p>基本用法</p>\n<pre><code class=\"language-html\">Toast('提示信息');\n</code></pre>\n<p>在调用 <code>Toast</code> 时传入一个对象即可配置更多选项</p>\n<pre><code class=\"language-html\">Toast({\n  message: '提示',\n  position: 'bottom',\n  duration: 5000\n});\n</code></pre>\n<p>若需在文字上方显示一个 icon 图标，可以将图标的类名作为 <code>iconClass</code> 的值传给 <code>Toast</code>（图标需自行准备）</p>\n<pre><code class=\"language-html\">Toast({\n  message: '操作成功',\n  iconClass: 'icon icon-success'\n});\n</code></pre>\n<h2>API</h2>\n<div class=\"table-container\"><table class=\"table\"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>message</td>\n<td>文本内容</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>position</td>\n<td>Toast 的位置</td>\n<td>String</td>\n<td>'top'<br>'bottom'<br>'middle'</td>\n<td>'middle'</td>\n</tr>\n<tr>\n<td>duration</td>\n<td>持续时间（毫秒）</td>\n<td>Number</td>\n<td></td>\n<td>3000</td>\n</tr>\n<tr>\n<td>className</td>\n<td>Toast 的类名。可以为其添加样式</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>iconClass</td>\n<td>icon 图标的类名</td>\n<td>String</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div>");
},function(s,n,t){function a(s){return t(l(s))}function l(s){return p[s]||function(){throw new Error("Cannot find module '"+s+"'.")}()}var p={"./README.md":5,"./en/README.md":6,"./en/action-sheet.md":15,"./en/badge.md":16,"./en/button.md":17,"./en/cell.md":18,"./en/checklist.md":19,"./en/field.md":20,"./en/header.md":21,"./en/indicator.md":22,"./en/infinite-scroll.md":23,"./en/lazyload.md":24,"./en/message-box.md":25,"./en/navbar.md":26,"./en/picker.md":27,"./en/popup.md":28,"./en/progress.md":29,"./en/pull-down.md":30,"./en/pull-up.md":31,"./en/radio.md":32,"./en/range.md":33,"./en/search.md":34,"./en/spinner.md":35,"./en/swipe.md":36,"./en/switch.md":37,"./en/tab-container.md":38,"./en/tabbar.md":39,"./en/toast.md":40,"./zh-cn/README.md":7,"./zh-cn/action-sheet.md":41,"./zh-cn/badge.md":42,"./zh-cn/button.md":43,"./zh-cn/cell.md":44,"./zh-cn/checklist.md":45,"./zh-cn/field.md":46,"./zh-cn/header.md":47,"./zh-cn/indicator.md":48,"./zh-cn/infinite-scroll.md":49,"./zh-cn/lazyload.md":50,"./zh-cn/loadmore.md":51,"./zh-cn/message-box.md":52,"./zh-cn/navbar.md":53,"./zh-cn/picker.md":54,"./zh-cn/popup.md":55,"./zh-cn/progress.md":56,"./zh-cn/radio.md":57,"./zh-cn/range.md":58,"./zh-cn/repositories.md":8,"./zh-cn/search.md":59,"./zh-cn/spinner.md":60,"./zh-cn/swipe.md":61,"./zh-cn/switch.md":62,"./zh-cn/tab-container.md":63,"./zh-cn/tabbar.md":64,"./zh-cn/toast.md":65};a.keys=function(){return Object.keys(p)},a.resolve=l,s.exports=a,a.id=66},function(s,n,t){function a(s){return t(l(s))}function l(s){return p[s]||function(){throw new Error("Cannot find module '"+s+"'.")}()}var p={"./en/README.md":6,"./zh-cn/README.md":7};a.keys=function(){return Object.keys(p)},a.resolve=l,s.exports=a,a.id=67},function(s,n,t){function a(s){return t(l(s))}function l(s){return p[s]||function(){throw new Error("Cannot find module '"+s+"'.")}()}var p={"./zh-cn/repositories.md":8};a.keys=function(){return Object.keys(p)},a.resolve=l,s.exports=a,a.id=68},function(s,n,t){s.exports={"default":t(70),__esModule:!0}},function(s,n,t){t(96),s.exports=t(9).Object.assign},function(s,n){s.exports=function(s){if("function"!=typeof s)throw TypeError(s+" is not a function!");return s}},function(s,n,t){var a=t(4);s.exports=function(s){if(!a(s))throw TypeError(s+" is not an object!");return s}},function(s,n,t){var a=t(13),l=t(92),p=t(91);s.exports=function(s){return function(n,t,e){var c,r=a(n),d=l(r.length),o=p(e,d);if(s&&t!=t){for(;d>o;)if(c=r[o++],c!=c)return!0}else for(;d>o;o++)if((s||o in r)&&r[o]===t)return s||o||0;return!s&&-1}}},function(s,n){var t={}.toString;s.exports=function(s){return t.call(s).slice(8,-1)}},function(s,n,t){var a=t(71);s.exports=function(s,n,t){if(a(s),void 0===n)return s;switch(t){case 1:return function(t){return s.call(n,t)};case 2:return function(t,a){return s.call(n,t,a)};case 3:return function(t,a,l){return s.call(n,t,a,l)}}return function(){return s.apply(n,arguments)}}},function(s,n,t){var a=t(4),l=t(3).document,p=a(l)&&a(l.createElement);s.exports=function(s){return p?l.createElement(s):{}}},function(s,n){s.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(s,n,t){var a=t(3),l=t(9),p=t(75),e=t(80),c="prototype",r=function(s,n,t){var d,o,h,i=s&r.F,g=s&r.G,j=s&r.S,m=s&r.P,u=s&r.B,b=s&r.W,x=g?l:l[n]||(l[n]={}),f=x[c],v=g?a:j?a[n]:(a[n]||{})[c];g&&(t=n);for(d in t)o=!i&&v&&void 0!==v[d],o&&d in x||(h=o?v[d]:t[d],x[d]=g&&"function"!=typeof v[d]?t[d]:u&&o?p(h,a):b&&v[d]==h?function(s){var n=function(n,t,a){if(this instanceof s){switch(arguments.length){case 0:return new s;case 1:return new s(n);case 2:return new s(n,t)}return new s(n,t,a)}return s.apply(this,arguments)};return n[c]=s[c],n}(h):m&&"function"==typeof h?p(Function.call,h):h,m&&((x.virtual||(x.virtual={}))[d]=h,s&r.R&&f&&!f[d]&&e(f,d,h)))};r.F=1,r.G=2,r.S=4,r.P=8,r.B=16,r.W=32,r.U=64,r.R=128,s.exports=r},function(s,n){var t={}.hasOwnProperty;s.exports=function(s,n){return t.call(s,n)}},function(s,n,t){var a=t(83),l=t(88);s.exports=t(1)?function(s,n,t){return a.f(s,n,l(1,t))}:function(s,n,t){return s[n]=t,s}},function(s,n,t){s.exports=!t(1)&&!t(2)(function(){return 7!=Object.defineProperty(t(76)("div"),"a",{get:function(){return 7}}).a})},function(s,n,t){"use strict";var a=t(86),l=t(84),p=t(87),e=t(93),c=t(11),r=Object.assign;s.exports=!r||t(2)(function(){var s={},n={},t=Symbol(),a="abcdefghijklmnopqrst";return s[t]=7,a.split("").forEach(function(s){n[s]=s}),7!=r({},s)[t]||Object.keys(r({},n)).join("")!=a})?function(s,n){for(var t=e(s),r=arguments.length,d=1,o=l.f,h=p.f;r>d;)for(var i,g=c(arguments[d++]),j=o?a(g).concat(o(g)):a(g),m=j.length,u=0;m>u;)h.call(g,i=j[u++])&&(t[i]=g[i]);return t}:r},function(s,n,t){var a=t(72),l=t(81),p=t(94),e=Object.defineProperty;n.f=t(1)?Object.defineProperty:function(s,n,t){if(a(s),n=p(n,!0),a(t),l)try{return e(s,n,t)}catch(c){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(s[n]=t.value),s}},function(s,n){n.f=Object.getOwnPropertySymbols},function(s,n,t){var a=t(79),l=t(13),p=t(73)(!1),e=t(89)("IE_PROTO");s.exports=function(s,n){var t,c=l(s),r=0,d=[];for(t in c)t!=e&&a(c,t)&&d.push(t);for(;n.length>r;)a(c,t=n[r++])&&(~p(d,t)||d.push(t));return d}},function(s,n,t){var a=t(85),l=t(77);s.exports=Object.keys||function(s){return a(s,l)}},function(s,n){n.f={}.propertyIsEnumerable},function(s,n){s.exports=function(s,n){return{enumerable:!(1&s),configurable:!(2&s),writable:!(4&s),value:n}}},function(s,n,t){var a=t(90)("keys"),l=t(95);s.exports=function(s){return a[s]||(a[s]=l(s))}},function(s,n,t){var a=t(3),l="__core-js_shared__",p=a[l]||(a[l]={});s.exports=function(s){return p[s]||(p[s]={})}},function(s,n,t){var a=t(12),l=Math.max,p=Math.min;s.exports=function(s,n){return s=a(s),0>s?l(s+n,0):p(s,n)}},function(s,n,t){var a=t(12),l=Math.min;s.exports=function(s){return s>0?l(a(s),9007199254740991):0}},function(s,n,t){var a=t(10);s.exports=function(s){return Object(a(s))}},function(s,n,t){var a=t(4);s.exports=function(s,n){if(!a(s))return s;var t,l;if(n&&"function"==typeof(t=s.toString)&&!a(l=t.call(s)))return l;if("function"==typeof(t=s.valueOf)&&!a(l=t.call(s)))return l;if(!n&&"function"==typeof(t=s.toString)&&!a(l=t.call(s)))return l;throw TypeError("Can't convert object to primitive value")}},function(s,n){var t=0,a=Math.random();s.exports=function(s){return"Symbol(".concat(void 0===s?"":s,")_",(++t+a).toString(36))}},function(s,n,t){var a=t(78);a(a.S+a.F,"Object",{assign:t(82)})},function(s,n){s.exports='<main class="row main" :class="{\'slide-in-left\': navbarShow}" _v-16297e78=""> <section class="col-2 is-scrollable navbar" _v-16297e78=""> <navbar _v-16297e78=""></navbar> </section> <section class="col-6 is-scrollable content" v-el:main="" @click="navbarShow = false" _v-16297e78=""> <div class=navbar-toggle-container _v-16297e78=""> <button class=navbar-toggle @click=toggleNavbar _v-16297e78=""> <span _v-16297e78=""></span> <span _v-16297e78=""></span> <span _v-16297e78=""></span> </button> </div> <router-view _v-16297e78=""></router-view> </section> <section class="col-4 demo" _v-16297e78=""> <phone _v-16297e78=""></phone> </section> </main>'},function(s,n){s.exports="<div class=phone _v-54f9016e=\"\"> <iframe class=demo-page :src=\"'//elemefe.github.io/mint-ui/#!' + (routePath === '/loadmore' ? '/pull-down' : (routePath === '/repositories' ? '' : routePath))\" frameborder=0 _v-54f9016e=\"\"> </iframe> </div>"},function(s,n){s.exports='<nav class=nav _v-a6464980=""> <ul _v-a6464980=""> <li _v-a6464980=""> <a class=nav-link v-link="{ path: \'/\' + ($route.language || $route.default_lang.value), activeClass: \'is-active\', exact: true }" _v-a6464980="">Overview</a> <a class=nav-link v-link="{ path: \'/\' + ($route.language || $route.default_lang.value) + \'/repositories\', activeClass: \'is-active\', exact: true }" _v-a6464980="">Repositories</a> </li> <template v-for="group in navs"> <li _v-a6464980=""> <a href=# @click.prevent="group.visible = !group.visible" class=nav-label v-text=group.title _v-a6464980=""> </a> </li> <ul v-show=group.visible transition=slidedown :style="{\n          maxHeight: group.list.length * 36 + \'px\'\n        }" _v-a6464980=""> <li v-for="item in group.list" _v-a6464980=""> <a class=nav-link v-link="{\n              path: \'/\' + ($route.language || $route.default_lang.value) + item.path,\n              activeClass: \'is-active\'\n            }" v-text=item.name _v-a6464980=""> </a> </li> </ul> </template> </ul> </nav>'},function(s,n,t){var a,l;t(161),s.exports=a||{},s.exports.__esModule&&(s.exports=s.exports["default"]),l&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=l)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n){var t,a;s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports["default"]),a&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=a)},function(s,n,t){var a,l;t(162),a=t(158),l=t(97),s.exports=a||{},s.exports.__esModule&&(s.exports=s.exports["default"]),l&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=l)},function(s,n,t){var a,l;t(164),a=t(159),l=t(99),s.exports=a||{},s.exports.__esModule&&(s.exports=s.exports["default"]),l&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=l)},function(s,n,t){var a,l;t(163),a=t(160),l=t(98),s.exports=a||{},s.exports.__esModule&&(s.exports=s.exports["default"]),l&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=l)},function(s,n,t){"use strict";function a(s){return s&&s.__esModule?s:{"default":s}}Object.defineProperty(n,"__esModule",{value:!0});var l=t(156),p=a(l),e=t(157),c=a(e);n["default"]={watch:{"$route.path":function(){var s=this;this.$els.main.scrollTop=0,setTimeout(function(){s.navbarShow=!1},200)}},data:function(){return{navbarShow:!1}},components:{Navbar:p["default"],Phone:c["default"]},methods:{toggleNavbar:function(s){s.stopPropagation(),this.navbarShow=!this.navbarShow}}}},function(s,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=t(14);a.navs.map(function(s){return s.visible=!0,s}),n["default"]={data:function(){return{navs:a.navs}}}},function(s,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n["default"]={name:"phone",computed:{routePath:function(){return this.$route.path.replace(/^\/(zh-cn|en)/,"")}}}},function(s,n){},function(s,n){},function(s,n){},function(s,n){},function(s,n){},function(s,n){},function(s,n){},function(s,n){s.exports={"default":"zh-cn",langs:[{value:"zh-cn",text:"中文"}]}},function(s,n){s.exports=[{title:"JS Components",list:[{path:"/toast",name:"Toast"},{path:"/indicator",name:"Indicator"},{path:"/loadmore",name:"Loadmore"},{path:"/infinite-scroll",name:"Infinite scroll"},{path:"/message-box",name:"Message box"},{path:"/action-sheet",name:"Action sheet"},{path:"/popup",name:"Popup"},{path:"/swipe",name:"Swipe"},{path:"/lazyload",name:"Lazy load"},{path:"/range",name:"Range"},{path:"/progress",name:"Progress"},{path:"/picker",name:"Picker"}]},{title:"CSS Components",list:[{path:"/header",name:"Header"},{path:"/tabbar",name:"Tabbar"},{path:"/navbar",name:"Navbar"},{path:"/button",name:"Button"},{path:"/cell",name:"Cell"},{path:"/spinner",name:"Spinner"},{path:"/tab-container",name:"TabContainer"},{path:"/search",name:"Search"}]},{title:"Form Components",list:[{path:"/switch",name:"Switch"},{path:"/checklist",name:"Checklist"},{path:"/radio",name:"Radio"},{path:"/field",name:"Field"},{path:"/badge",name:"Badge"}]}]},function(s,n){s.exports=Vue},function(s,n){s.exports=VueRouter}]);